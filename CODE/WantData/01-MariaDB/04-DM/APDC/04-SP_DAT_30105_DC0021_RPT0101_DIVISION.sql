DROP PROCEDURE IF EXISTS APDC.SP_DAT_30105_DC0021_RPT0101_DIVISION;

CREATE PROCEDURE APDC.SP_DAT_30105_DC0021_RPT0101_DIVISION (
    VAR_EDI_DATE CHAR(8), VAR_EDI_TIME CHAR(9), VAR_DATA_DATE CHAR(8)
  , OUT VAR_SP_RESULT CHAR(1)
)
BEGIN
    
    SET @RPT_YMD_END=APDC.FN_GET_YMD(VAR_DATA_DATE,0,0,0,'Y') COLLATE utf8_unicode_ci;

    --INSERT1
    --DC0021_SALES_DIST_PROD_DATE_CUM-日業績金額-累積
    INSERT INTO APDC.DC0021_RPT0101_DIVISION
    SELECT VAR_DATA_DATE AS DATA_DATE
         , VAR_DATA_DATE AS RPT_YMD
         , 0 AS WORK_RATIO
         , 'DIVISIONC_ID' AS DIVISIONC_ID
         , 'DIVISIONC_NM' AS DIVISIONC_NM
         , DIVISION_ID
         , NULL AS DIVISION_NM
         , 0 AS BILLING_D3
         , 0 AS BILLING_D3_V
         , NULL AS BILLING_D3_F
         , 0 AS BILLING_D2
         , 0 AS BILLING_D2_V
         , NULL AS BILLING_D2_F
         , 0 AS BILLING_D1
         , 0 AS BILLING_D1_V
         , NULL AS BILLING_D1_F
         , SUM(BILLING) AS CUM_BILLING_D1
         , ROUND(SUM(BILLING)/1000,0) AS CUM_BILLING_D1_V
         , (CASE WHEN RPT_YMD=@RPT_YMD_END THEN 'Z' ELSE NULL END) AS CUM_BILLING_D1_F
         , 0 AS CUM_BILLING_D1_MAX
         , 0 AS CUM_BILLING_D1_DISTR
         , SUM(SALES_AMT) AS CUM_SALES_AMT_POST
         , ROUND(SUM(SALES_AMT)/1000,0) AS CUM_SALES_AMT_POST_V
         , (CASE WHEN RPT_YMD<>@RPT_YMD_END THEN 'Z' ELSE NULL END) AS CUM_SALES_AMT_POST_F
         , 0 AS CUM_SALES_AMT_POST_MAX
         , 0 AS CUM_SALES_AMT_POST_DISTR
         , SUM(SALES_AMT_PAST_MONTH) AS SALES_AMT_PAST_MONTH
         , ROUND(SUM(SALES_AMT_PAST_MONTH)/1000,0) AS SALES_AMT_PAST_MONTH_V
         , 0 AS PAST_PROG_REACH_RATE_BILLING
         , 0 AS PAST_PROG_REACH_RATE_BILLING_V
         , NULL AS PAST_PROG_REACH_RATE_BILLING_F
         , 0 AS PAST_PROG_REACH_RATE_POST
         , 0 AS PAST_PROG_REACH_RATE_POST_V
         , NULL AS PAST_PROG_REACH_RATE_POST_F
         , SUM(SALES_AMT_PAST_MONTH_PROG) AS SALES_AMT_PAST_PROG
         , ROUND(SUM(SALES_AMT_PAST_MONTH_PROG)/1000,0) AS SALES_AMT_PAST_PROG_V
         , 0 AS PAST_PROG_GROWTH_RATE_BILLING
         , NULL AS PAST_PROG_GROWTH_RATE_BILLING_F
         , 0 AS PAST_PROG_GROWTH_RATE_POST
         , NULL AS PAST_PROG_GROWTH_RATE_POST_F
         , 0 AS SALES_AMT_PAST_PROG_DIFF_BILLING
         , 0 AS SALES_AMT_PAST_PROG_DIFF_BILLING_V
         , NULL AS SALES_AMT_PAST_PROG_DIFF_BILLING_F
         , 0 AS SALES_AMT_PAST_PROG_DIFF_POST
         , 0 AS SALES_AMT_PAST_PROG_DIFF_POST_V
         , NULL AS SALES_AMT_PAST_PROG_DIFF_POST_F
         , 0 AS FCST_AMT
         , 0 AS FCST_AMT_V
         , NULL AS FCST_AMT_F
         , 0 AS FCST_REACH_RATE_BILLING
         , NULL AS FCST_REACH_RATE_BILLING_F
         , 0 AS FCST_REACH_RATE_POST
         , NULL AS FCST_REACH_RATE_POST_F
         , 0 AS FCST_AMT_PROG_DIFF_BILLING
         , 0 AS FCST_AMT_PROG_DIFF_BILLING_V
         , NULL AS FCST_AMT_PROG_DIFF_BILLING_F
         , 0 AS FCST_AMT_PROG_DIFF_POST
         , 0 AS FCST_AMT_PROG_DIFF_POST_V
         , NULL AS FCST_AMT_PROG_DIFF_POST_F
         , 0 AS DIST_BAL_BILLING
         , 0 AS DIST_BAL_BILLING_V
         , NULL AS DIST_BAL_BILLING_F
         , 0 AS DIST_BAL_DIFF_BILLING
         , 0 AS DIST_BAL_DIFF_BILLING_V
         , NULL AS DIST_BAL_DIFF_BILLING_F
    FROM DMMDL.DC0021_SALES_DIST_PROD_DATE_CUM
    WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE
    GROUP BY DIVISION_ID
    ;

    --UPDATE2
    --從直式取MAX
    UPDATE APDC.DC0021_RPT0101_DIVISION A
    JOIN(SELECT MAX(CUM_BILLING_D1) AS CUM_BILLING_D1_MAX
         FROM APDC.DC0021_RPT0101_CUM_BILLING
         WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD
    SET A.CUM_BILLING_D1_MAX=B.CUM_BILLING_D1_MAX
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;

    --UPDATE3
    UPDATE APDC.DC0021_RPT0101_DIVISION A
    JOIN(SELECT MAX(CUM_SALES_AMT_POST) AS CUM_SALES_AMT_POST_MAX
         FROM APDC.DC0021_RPT0101_CUM_POST
         WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD
    SET A.CUM_SALES_AMT_POST_MAX=B.CUM_SALES_AMT_POST_MAX
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;

    --UPDATE4
    --WORK_RATIO 標準進度
    UPDATE APDC.DC0021_RPT0101_DIVISION A
    JOIN(SELECT ROUND(WORK_RATIO,3) AS WORK_RATIO
         FROM DMMDL.DC0021_WORK_RATIO_CUM
         WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD
    SET A.WORK_RATIO=B.WORK_RATIO
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;
    
    --UPDATE5
    --DC0021_SALES_DIST_PROD_DATE-日業績金額
    UPDATE APDC.DC0021_RPT0101_DIVISION A
    JOIN(SELECT DIVISION_ID
              , SUM(BILLING_D3) AS BILLING_D3
              , ROUND(SUM(BILLING_D3)/1000,0) AS BILLING_D3_V
              , (CASE WHEN RPT_YMD=@RPT_YMD_END THEN 'A' ELSE NULL END) AS BILLING_D3_F
              , SUM(BILLING_D2) AS BILLING_D2
              , ROUND(SUM(BILLING_D2)/1000,0) AS BILLING_D2_V
              , (CASE WHEN RPT_YMD=@RPT_YMD_END THEN 'A' ELSE NULL END) AS BILLING_D2_F
              , SUM(BILLING_D1) AS BILLING_D1
              , ROUND(SUM(BILLING_D1)/1000,0) AS BILLING_D1_V
              , (CASE WHEN RPT_YMD=@RPT_YMD_END THEN 'A' ELSE NULL END) AS BILLING_D1_F
         FROM DMMDL.DC0021_SALES_DIST_PROD_DATE
         WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE
         GROUP BY DIVISION_ID) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD AND A.DIVISION_ID=B.DIVISION_ID
    SET A.BILLING_D3=B.BILLING_D3
      , A.BILLING_D3_V=B.BILLING_D3_V
      , A.BILLING_D3_F=B.BILLING_D3_F
      , A.BILLING_D2=B.BILLING_D2
      , A.BILLING_D2_V=B.BILLING_D2_V
      , A.BILLING_D2_F=B.BILLING_D2_F
      , A.BILLING_D1=B.BILLING_D1
      , A.BILLING_D1_V=B.BILLING_D1_V
      , A.BILLING_D1_F=B.BILLING_D1_F
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;

    --UPDATE6
    --PAST_PROG_REACH_RATE_BILLING 全月同期達成率-累計開單
    UPDATE APDC.DC0021_RPT0101_DIVISION A
    JOIN(SELECT M.DIVISION_ID
              , N.PAST_PROG_REACH_RATE_BILLING AS PAST_PROG_REACH_RATE_BILLING
              , (CASE WHEN N.PAST_PROG_REACH_RATE_BILLING<0 THEN 0.00 ELSE N.PAST_PROG_REACH_RATE_BILLING END) AS PAST_PROG_REACH_RATE_BILLING_V
              , (CASE WHEN M.RPT_YMD=@RPT_YMD_END THEN 'Z'
                      WHEN M.SALES_AMT_PAST_MONTH<=0 THEN 'A' ELSE NULL END) AS PAST_PROG_REACH_RATE_BILLING_F
              , N.PAST_PROG_REACH_RATE_POST AS PAST_PROG_REACH_RATE_POST
              , (CASE WHEN N.PAST_PROG_REACH_RATE_POST<0 THEN 0.00 ELSE N.PAST_PROG_REACH_RATE_POST END) AS PAST_PROG_REACH_RATE_POST_V
              , (CASE WHEN M.RPT_YMD<>@RPT_YMD_END THEN 'Z'
                      WHEN M.SALES_AMT_PAST_MONTH<=0 THEN 'A' ELSE NULL END) AS PAST_PROG_REACH_RATE_POST_F
              , N.PAST_PROG_GROWTH_RATE_BILLING AS PAST_PROG_GROWTH_RATE_BILLING
              , (CASE WHEN M.RPT_YMD=@RPT_YMD_END THEN 'Z'
                      WHEN N.PAST_PROG_GROWTH_RATE_BILLING<0 THEN 'A'
                      WHEN M.SALES_AMT_PAST_PROG<=0 THEN 'B' ELSE NULL END) AS PAST_PROG_GROWTH_RATE_BILLING_F
              , N.PAST_PROG_GROWTH_RATE_POST AS PAST_PROG_GROWTH_RATE_POST
              , (CASE WHEN M.RPT_YMD<>@RPT_YMD_END THEN 'Z'
                      WHEN N.PAST_PROG_GROWTH_RATE_POST<0 THEN 'A'
                      WHEN M.SALES_AMT_PAST_PROG<=0 THEN 'B' ELSE NULL END) AS PAST_PROG_GROWTH_RATE_POST_F
              , N.SALES_AMT_PAST_PROG_DIFF_BILLING AS SALES_AMT_PAST_PROG_DIFF_BILLING
              , N.SALES_AMT_PAST_PROG_DIFF_BILLING_V AS SALES_AMT_PAST_PROG_DIFF_BILLING_V
              , (CASE WHEN M.RPT_YMD=@RPT_YMD_END THEN 'Z'
                      WHEN N.SALES_AMT_PAST_PROG_DIFF_BILLING_V<0 THEN 'A' ELSE NULL END) AS SALES_AMT_PAST_PROG_DIFF_BILLING_F
              , N.SALES_AMT_PAST_PROG_DIFF_POST AS SALES_AMT_PAST_PROG_DIFF_POST
              , N.SALES_AMT_PAST_PROG_DIFF_POST_V AS SALES_AMT_PAST_PROG_DIFF_POST_V
              , (CASE WHEN M.RPT_YMD<>@RPT_YMD_END THEN 'Z'
                      WHEN N.SALES_AMT_PAST_PROG_DIFF_POST_V<0 THEN 'A' ELSE NULL END) AS SALES_AMT_PAST_PROG_DIFF_POST_F
         FROM(
             SELECT M.DIVISION_ID 
                  , ROUND(M.BILLING/M.SALES_AMT_PAST_MONTH,3) AS PAST_PROG_REACH_RATE_BILLING
                  , ROUND((M.SALES_AMT/M.SALES_AMT_PAST_MONTH),3) AS PAST_PROG_REACH_RATE_POST
                  , ROUND(((M.BILLING/M.SALES_AMT_PAST_MONTH_PROG)-1),3) AS PAST_PROG_GROWTH_RATE_BILLING
                  , ROUND(((M.BILLING/M.SALES_AMT_PAST_MONTH_PROG)-1),3) AS PAST_PROG_GROWTH_RATE_POST
                  , (M.BILLING-M.SALES_AMT_PAST_MONTH_PROG) AS SALES_AMT_PAST_PROG_DIFF_BILLING
                  , ROUND((M.BILLING-M.SALES_AMT_PAST_MONTH_PROG)/1000,0) AS SALES_AMT_PAST_PROG_DIFF_BILLING_V
                  , (M.SALES_AMT-M.SALES_AMT_PAST_MONTH_PROG) AS SALES_AMT_PAST_PROG_DIFF_POST
                  , ROUND((M.SALES_AMT-M.SALES_AMT_PAST_MONTH_PROG)/1000,0) AS SALES_AMT_PAST_PROG_DIFF_POST_V
             FROM(
                 SELECT RPT_YMD
                      , DIVISION_ID
                      , SUM(SALES_AMT) AS SALES_AMT
                      , SUM(BILLING) AS BILLING
                      , SUM(SALES_AMT_PAST_MONTH) AS SALES_AMT_PAST_MONTH
                      , SUM(SALES_AMT_PAST_MONTH_PROG) AS SALES_AMT_PAST_MONTH_PROG
                      , SUM(SALES_AMT_PAST_PROG) AS SALES_AMT_PAST_PROG
                 FROM DMMDL.DC0021_SALES_DIST_PROD_DATE_CUM
                 WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE
                 GROUP BY DIVISION_ID
                 )M
              )N) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD AND A.DIVISION_ID=B.DIVISION_ID
    SET A.PAST_PROG_REACH_RATE_BILLING=B.PAST_PROG_REACH_RATE_BILLING
      , A.PAST_PROG_REACH_RATE_BILLING_V=B.PAST_PROG_REACH_RATE_BILLING_V
      , A.PAST_PROG_REACH_RATE_BILLING_F=B.PAST_PROG_REACH_RATE_BILLING_F
      , A.PAST_PROG_REACH_RATE_POST=B.PAST_PROG_REACH_RATE_POST
      , A.PAST_PROG_REACH_RATE_POST_V=B.PAST_PROG_REACH_RATE_POST_V
      , A.PAST_PROG_REACH_RATE_POST_F=B.PAST_PROG_REACH_RATE_POST_F
      , A.PAST_PROG_GROWTH_RATE_BILLING=B.PAST_PROG_GROWTH_RATE_BILLING
      , A.PAST_PROG_GROWTH_RATE_BILLING_F=B.PAST_PROG_GROWTH_RATE_BILLING_F
      , A.PAST_PROG_GROWTH_RATE_POST=B.PAST_PROG_GROWTH_RATE_POST
      , A.PAST_PROG_GROWTH_RATE_POST_F=B.PAST_PROG_GROWTH_RATE_POST_F
      , A.SALES_AMT_PAST_PROG_DIFF_BILLING=B.SALES_AMT_PAST_PROG_DIFF_BILLING
      , A.SALES_AMT_PAST_PROG_DIFF_BILLING_V=B.SALES_AMT_PAST_PROG_DIFF_BILLING_V
      , A.SALES_AMT_PAST_PROG_DIFF_BILLING_F=B.SALES_AMT_PAST_PROG_DIFF_BILLING_F
      , A.SALES_AMT_PAST_PROG_DIFF_POST=B.SALES_AMT_PAST_PROG_DIFF_POST
      , A.SALES_AMT_PAST_PROG_DIFF_POST_V=B.SALES_AMT_PAST_PROG_DIFF_POST_V
      , A.SALES_AMT_PAST_PROG_DIFF_POST_F=B.SALES_AMT_PAST_PROG_DIFF_POST_F
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;

    --UPDATE7
    --FCST_AMT 全月預估
    UPDATE APDC.DC0021_RPT0101_DIVISION A
    JOIN(SELECT DIVISION_ID
              , SUM(FCST_AMT) AS FCST_AMT
              , ROUND(SUM(FCST_AMT)/1000,0) AS FCST_AMT_V
         FROM DMMDL.DC0021_FCST_AMT_CUM
         WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE
         GROUP BY DIVISION_ID) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD AND A.DIVISION_ID=B.DIVISION_ID
    SET A.FCST_AMT=B.FCST_AMT
      , A.FCST_AMT_V=B.FCST_AMT_V
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;

    --UPDATE8
    --DIST_BAL_BILLING 客戶賬餘-累計開單
    UPDATE APDC.DC0021_RPT0101_DIVISION A
    JOIN(SELECT M.DIVISION_ID
              , (M.INIT_BAL+M.PAY_AMT-M.BILLING) AS DIST_BAL_BILLING
              , (CASE WHEN ROUND((M.INIT_BAL+M.PAY_AMT-M.BILLING)/1000,0)<0 THEN 0 ELSE ROUND((M.INIT_BAL+M.PAY_AMT-M.BILLING)/1000,0) END) AS DIST_BAL_BILLING_V
              , M.DIST_BAL_BILLING_F AS DIST_BAL_BILLING_F
         FROM(
             SELECT DIVISION_ID
                  , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN SUM(INIT_BAL) ELSE 0 END) AS INIT_BAL
                  , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN SUM(PAY_AMT) ELSE 0 END) AS PAY_AMT
                  , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN SUM(BILLING) ELSE 0 END) AS BILLING
                  , (CASE WHEN RPT_YMD=@RPT_YMD_END THEN 'A' ELSE NULL END) AS DIST_BAL_BILLING_F
             FROM DMMDL.DC0021_DIST_BAL_CUM
             WHERE DATA_DATE=VAR_DATA_DATE
             GROUP BY DIVISION_ID
             )M) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD AND A.DIVISION_ID=B.DIVISION_ID
    SET A.DIST_BAL_BILLING=B.DIST_BAL_BILLING
      , A.DIST_BAL_BILLING_V=B.DIST_BAL_BILLING_V
      , A.DIST_BAL_BILLING_F=B.DIST_BAL_BILLING_F
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;

    --UPDATE9
    --FCST_REACH_RATE_BILLING 預估達成率-累計開單/累計過帳
    --FCST_AMT_PROG_DIFF_BILLING 預估進度落差-累計開單/累計過帳
    --DIST_BAL_DIFF_BILLING 帳款落差-累計開單
    UPDATE APDC.DC0021_RPT0101_DIVISION A
    JOIN(SELECT DIVISIONC_ID
              , DIVISION_ID
              , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN ROUND(CUM_BILLING_D1/CUM_BILLING_D1_MAX,3) ELSE 0 END) AS CUM_BILLING_D1_DISTR
              , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN ROUND(CUM_SALES_AMT_POST/CUM_SALES_AMT_POST_MAX,3) ELSE 0 END) AS CUM_SALES_AMT_POST_DISTR
              , (CASE WHEN FCST_AMT_V<SALES_AMT_PAST_MONTH_V THEN 'A' ELSE NULL END) AS FCST_AMT_F
              , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN (CUM_BILLING_D1-FCST_AMT*WORK_RATIO) ELSE 0 END) AS FCST_AMT_PROG_DIFF_BILLING
              , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN ROUND((CUM_BILLING_D1-FCST_AMT*WORK_RATIO)/1000,0) ELSE 0 END) AS FCST_AMT_PROG_DIFF_BILLING_V
              , (CASE WHEN RPT_YMD=@RPT_YMD_END THEN 'Z'
                      WHEN (CUM_BILLING_D1-(FCST_AMT*WORK_RATIO))<0 THEN 'A' ELSE NULL END) AS FCST_AMT_PROG_DIFF_BILLING_F
              , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN (CUM_SALES_AMT_POST-FCST_AMT*WORK_RATIO) ELSE 0 END) AS FCST_AMT_PROG_DIFF_POST
              , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN ROUND((CUM_SALES_AMT_POST-FCST_AMT*WORK_RATIO)/1000,0) ELSE 0 END) AS FCST_AMT_PROG_DIFF_POST_V
              , (CASE WHEN RPT_YMD<>@RPT_YMD_END THEN 'Z'
                      WHEN (CUM_SALES_AMT_POST-(FCST_AMT*WORK_RATIO))<0 THEN 'A' ELSE NULL END) AS FCST_AMT_PROG_DIFF_POST_F
              , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN ROUND(CUM_BILLING_D1/FCST_AMT,3) ELSE 0 END) AS FCST_REACH_RATE_BILLING
              , (CASE WHEN RPT_YMD=@RPT_YMD_END THEN 'Z' ELSE NULL END) AS FCST_REACH_RATE_BILLING_F
              , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN ROUND(CUM_SALES_AMT_POST/FCST_AMT,3) ELSE 0 END) AS FCST_REACH_RATE_POST
              , (CASE WHEN RPT_YMD<>@RPT_YMD_END THEN 'Z' ELSE NULL END) AS FCST_REACH_RATE_POST_F
              , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN (CUM_BILLING_D1+DIST_BAL_BILLING-FCST_AMT) ELSE 0 END) AS DIST_BAL_DIFF_BILLING
              , (CASE WHEN RPT_YMD=VAR_DATA_DATE THEN ROUND((CUM_BILLING_D1+DIST_BAL_BILLING-FCST_AMT)/1000,0) ELSE 0 END) AS DIST_BAL_DIFF_BILLING_V
              , (CASE WHEN RPT_YMD=@RPT_YMD_END THEN 'A' ELSE NULL END) AS DIST_BAL_DIFF_BILLING_F
         FROM APDC.DC0021_RPT0101_DIVISION
         WHERE DATA_DATE=VAR_DATA_DATE
         GROUP BY DIVISIONC_ID
                , DIVISION_ID) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD AND A.DIVISIONC_ID=B.DIVISIONC_ID AND A.DIVISION_ID=B.DIVISION_ID
    SET A.CUM_BILLING_D1_DISTR=B.CUM_BILLING_D1_DISTR
      , A.CUM_SALES_AMT_POST_DISTR=B.CUM_SALES_AMT_POST_DISTR
      , A.FCST_AMT_F=B.FCST_AMT_F
      , A.FCST_AMT_PROG_DIFF_BILLING=B.FCST_AMT_PROG_DIFF_BILLING
      , A.FCST_AMT_PROG_DIFF_BILLING_V=B.FCST_AMT_PROG_DIFF_BILLING_V
      , A.FCST_AMT_PROG_DIFF_BILLING_F=B.FCST_AMT_PROG_DIFF_BILLING_F
      , A.FCST_AMT_PROG_DIFF_POST=B.FCST_AMT_PROG_DIFF_POST
      , A.FCST_AMT_PROG_DIFF_POST_V=B.FCST_AMT_PROG_DIFF_POST_V
      , A.FCST_AMT_PROG_DIFF_POST_F=B.FCST_AMT_PROG_DIFF_POST_F
      , A.FCST_REACH_RATE_BILLING=B.FCST_REACH_RATE_BILLING
      , A.FCST_REACH_RATE_BILLING_F=B.FCST_REACH_RATE_BILLING_F
      , A.FCST_REACH_RATE_POST=B.FCST_REACH_RATE_POST
      , A.FCST_REACH_RATE_POST_F=B.FCST_REACH_RATE_POST_F
      , A.DIST_BAL_DIFF_BILLING=B.DIST_BAL_DIFF_BILLING
      , A.DIST_BAL_DIFF_BILLING_V=B.DIST_BAL_DIFF_BILLING_V
      , A.DIST_BAL_DIFF_BILLING_F=B.DIST_BAL_DIFF_BILLING_F
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;


    SET VAR_SP_RESULT='Y';
    COMMIT;
END
;