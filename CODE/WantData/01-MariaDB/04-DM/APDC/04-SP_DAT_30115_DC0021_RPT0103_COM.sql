DROP PROCEDURE IF EXISTS APDC.SP_DAT_30115_DC0021_RPT0103_COM;

CREATE PROCEDURE APDC.SP_DAT_30115_DC0021_RPT0103_COM (
    VAR_EDI_DATE CHAR(8), VAR_EDI_TIME CHAR(9), VAR_DATA_DATE CHAR(8)
  , OUT VAR_SP_RESULT CHAR(1)
)
BEGIN
    
    SET @FY1_04=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 1) COLLATE utf8_unicode_ci;
    SET @FY1_05=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 2) COLLATE utf8_unicode_ci;
    SET @FY1_06=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 3) COLLATE utf8_unicode_ci;
    SET @FY1_07=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 4) COLLATE utf8_unicode_ci;
    SET @FY1_08=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 5) COLLATE utf8_unicode_ci;
    SET @FY1_09=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 6) COLLATE utf8_unicode_ci;
    SET @FY1_10=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 7) COLLATE utf8_unicode_ci;
    SET @FY1_11=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 8) COLLATE utf8_unicode_ci;
    SET @FY1_12=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 9) COLLATE utf8_unicode_ci;
    SET @FY_01=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 10) COLLATE utf8_unicode_ci;
    SET @FY_02=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 11) COLLATE utf8_unicode_ci;
    SET @FY_03=APDC.FN_GET_FY_YM(VAR_DATA_DATE, 12) COLLATE utf8_unicode_ci;
    SET @DIVISION_ID_MILK='乳飲ID' COLLATE utf8_unicode_ci;
    SET @DIVISION_ID_LEIS='休閒ID' COLLATE utf8_unicode_ci;

    --INSERT1
    --乳飲休閒同期、達成
    INSERT INTO APDC.DC0021_RPT0103_COM
    SELECT VAR_DATA_DATE AS DATA_DATE 
         , VAR_DATA_DATE AS RPT_YMD
         , 0 AS WORK_RATIO
         , '乳飲休閒ID' AS DIVISIONC_ID
         , '乳飲休閒NM' AS DIVISIONC_NMDIVISION_ID
         , DIVISIOND_ID
         , NULL AS DIVISIOND_NM
         , 'CTR_SUPV_ID' AS CTR_SUPV_ID
         , DISTRICT15_ID
         , NULL AS DISTRICT15_NM
         , 'DIST15_SUPV_ID' AS DIST15_SUPV_ID
         , COM_ID
         , NULL AS COM_NM
         , 'RGN_DIR_ID' AS RGN_DIR_ID
         , SUM(CASE WHEN @FY1_04=SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY1_SALES_AMT01
         , SUM(CASE WHEN @FY1_05=SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY1_SALES_AMT02
         , SUM(CASE WHEN @FY1_06=SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY1_SALES_AMT03
         , SUM(CASE WHEN @FY1_07=SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY1_SALES_AMT04
         , SUM(CASE WHEN @FY1_08=SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY1_SALES_AMT05
         , SUM(CASE WHEN @FY1_09=SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY1_SALES_AMT06
         , SUM(CASE WHEN @FY1_10=SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY1_SALES_AMT07
         , SUM(CASE WHEN @FY1_11=SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY1_SALES_AMT08
         , SUM(CASE WHEN @FY1_12=SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY1_SALES_AMT09
         , SUM(CASE WHEN (@FY_01, @FY_02) IN SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY_SALES_AMT1011
         , SUM(CASE WHEN @FY_03=SUBSTRING(RPT_YMD,1 ,6) AND DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT ELSE 0 END) AS FY_SALES_AMT12
         , 0 AS MKT_SHARE
         , SUM(CASE WHEN DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN SALES_AMT_PAST_MONTH ELSE 0 END) AS SALES_AMT_PAST_MONTH_MKLS
         , (CASE WHEN DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN ROUND(SUM(SALES_AMT_PAST_MONTH)/1000,0) ELSE 0 END) AS SALES_AMT_PAST_MONTH_MKLS_V
         , SUM(CASE WHEN DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN BILLING ELSE 0 END) AS SALES_AMT_REACH_MKLS
         , (CASE WHEN DIVISION_ID IN (@DIVISION_ID_MILK, @DIVISION_ID_LEIS) THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_REACH_MKLS_V
         , 0 AS SALES_AMT_REACH_MKLS_MAX
         , 0 AS SALES_AMT_REACH_MKLS_DISTR
         , 0 AS SALES_PAST_REACH_RATE_MKLS
         , 0 AS SALES_PAST_REACH_RATE_MKLS_V
         , NULL AS SALES_PAST_REACH_RATE_MKLS_F
         , 0 AS RANK_MKLS
         , 0 AS MKT_SHARE_REACH_RATE
         , NULL AS MKT_SHARE_REACH_RATE_F
         , SUM(CASE WHEN DIVISION_ID=@DIVISION_ID_MILK THEN SALES_AMT_PAST_MONTH ELSE 0 END) AS SALES_AMT_PAST_MONTH_MILK
         , (CASE WHEN DIVISION_ID=@DIVISION_ID_MILK THEN ROUND(SUM(SALES_AMT_PAST_MONTH)/1000,0) ELSE 0 END) AS SALES_AMT_PAST_MONTH_MILK_V
         , SUM(CASE WHEN DIVISION_ID=@DIVISION_ID_MILK THEN BILLING ELSE 0 END) AS SALES_AMT_REACH_MILK
         , (CASE WHEN DIVISION_ID=@DIVISION_ID_MILK THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_REACH_MILK_V
         , 0 AS SALES_PAST_REACH_RATE_MILK
         , 0 AS SALES_PAST_REACH_RATE_MILK_V
         , NULL AS SALES_PAST_REACH_RATE_MILK_F
         , 0 AS RANK_MILK
         , SUM(CASE WHEN DIVISION_ID=@DIVISION_ID_LEIS THEN SALES_AMT_PAST_MONTH ELSE 0 END) AS SALES_AMT_PAST_MONTH_LEIS
         , (CASE WHEN DIVISION_ID=@DIVISION_ID_LEIS THEN ROUND(SUM(SALES_AMT_PAST_MONTH)/1000,0) ELSE 0 END) AS SALES_AMT_PAST_MONTH_LEIS_V
         , SUM(CASE WHEN DIVISION_ID=@DIVISION_ID_LEIS THEN BILLING ELSE 0 END) AS SALES_AMT_REACH_LEIS
         , (CASE WHEN DIVISION_ID=@DIVISION_ID_LEIS THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_REACH_LEIS_V
         , 0 AS SALES_PAST_REACH_RATE_LEIS
         , 0 AS SALES_PAST_REACH_RATE_LEIS_V
         , NULL AS SALES_PAST_REACH_RATE_LEIS_F
         , 0 AS RANK_LEIS
    FROM DMMDL.DC0021_SALES_DIST_PROD_DATE_CUM
    WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE
    GROUP BY DIVISION_ID
           , DIVISIOND_ID
           , DISTRICT15_ID
           , COM_ID
    ;

    --UPDATE2
    --標準進度
    UPDATE APDC.DC0021_RPT0103_COM A
    JOIN(SELECT ROUND(WORK_RATIO,3) AS WORK_RATIO
         FROM DMMDL.DC0021_WORK_RATIO_CUM
         WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD
    SET A.WORK_RATIO=B.WORK_RATIO
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;

    --UPDATEE3
    --應有市場占比 達成率
    UPDATE APDC.DC0021_RPT0103_COM A
    JOIN(SELECT COM_ID
              , ROUND(COM_MKT_SHARE,5) AS MKT_SHARE
              , ROUND(MKT_SHARE_REACH_RATE_MKLS,3) AS MKT_SHARE_REACH_RATE
              , (CASE WHEN MKT_SHARE_REACH_RATE_MKLS=1 THEN 'A' ELSE NULL END) AS MKT_SHARE_REACH_RATE_F
         FROM DMMDL.DC0021_MKT_SHARE_REACH_RATE_COM_CUM
         WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE
         GROUP BY COM_ID) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD AND A.COM_ID=B.COM_ID
    SET A.MKT_SHARE=B.MKT_SHARE
      , A.MKT_SHARE_REACH_RATE=B.MKT_SHARE_REACH_RATE
      . A.MKT_SHARE_REACH_RATE_F=B.MKT_SHARE_REACH_RATE_F
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;

    --UPDATE4
    --同期達成率 排名
    UPDATE APDC.DC0021_RPT0103_COM A
    JOIN(SELECT DIVISIONC_ID
              , DIVISION_ID
              , DIVISIOND_ID
              , DISTRICT15_ID
              , COM_ID
              , MAX(SALES_AMT_REACH_MKLS) AS SALES_AMT_REACH_MKLS_MAX
              , ROUND(SALES_AMT_REACH_MKLS/MAX(SALES_AMT_REACH_MKLS),3) AS SALES_AMT_REACH_MKLS_DISTR
              , ROUND(SALES_AMT_REACH_MKLS/SALES_AMT_PAST_MONTH_MKLS,3) AS SALES_PAST_REACH_RATE_MKLS
              , (CASE WHEN ROUND(SALES_AMT_REACH_MKLS/SALES_AMT_PAST_MONTH_MKLS,3)<0 THEN 0.00 ELSE ROUND(SALES_AMT_REACH_MKLS/SALES_AMT_PAST_MONTH_MKLS,3) END) AS SALES_PAST_REACH_RATE_MKLS_V
              , (CASE WHEN ROUND(SALES_AMT_REACH_MKLS/SALES_AMT_PAST_MONTH_MKLS,3)<WORK_RATIO THEN 'A'
                      WHEN SALES_AMT_PAST_MONTH_MKLS<=0 THEN 'B' ELSE NULL END) AS SALES_PAST_REACH_RATE_MKLS_F
              , ROW_NUMBER() OVER(ORDER BY (SALES_AMT_REACH_MKLS/SALES_AMT_PAST_MONTH_MKLS) DESC) AS RANK_MKLS
              , ROUND(SALES_AMT_REACH_MILK/SALES_AMT_PAST_MONTH_MILK,3) AS SALES_PAST_REACH_RATE_MILK
              , (CASE WHEN ROUND(SALES_AMT_REACH_MILK/SALES_AMT_PAST_MONTH_MILK,3)<0 THEN 0.00 ELSE ROUND(SALES_AMT_REACH_MILK/SALES_AMT_PAST_MONTH_MILK,3) END) AS SALES_PAST_REACH_RATE_MILK_V
              , (CASE WHEN ROUND(SALES_AMT_REACH_MILK/SALES_AMT_PAST_MONTH_MILK,3)<WORK_RATIO THEN 'A'
                      WHEN SALES_AMT_PAST_MONTH_MILK<=0 THEN 'B' ELSE NULL END) AS SALES_PAST_REACH_RATE_MILK_F
              , ROW_NUMBER() OVER(ORDER BY (SALES_AMT_REACH_MILK/SALES_AMT_PAST_MONTH_MILK) DESC) AS RANK_MILK
              , ROUND(SALES_AMT_REACH_LEIS/SALES_AMT_PAST_MONTH_LEIS,3) AS SALES_PAST_REACH_RATE_LEIS
              , (CASE WHEN ROUND(SALES_AMT_REACH_LEIS/SALES_AMT_PAST_MONTH_LEIS,3)<0 THEN 0.00 ELSE ROUND(SALES_AMT_REACH_LEIS/SALES_AMT_PAST_MONTH_LEIS,3) END) AS SALES_PAST_REACH_RATE_LEIS_V
              , (CASE WHEN ROUND(SALES_AMT_REACH_LEIS/SALES_AMT_PAST_MONTH_LEIS,3)<WORK_RATIO THEN 'A'
                      WHEN SALES_AMT_PAST_MONTH_LEIS<=0 THEN 'B' ELSE NULL END) AS SALES_PAST_REACH_RATE_LEIS_F
              , ROW_NUMBER() OVER(ORDER BY (SALES_AMT_REACH_LEIS/SALES_AMT_PAST_MONTH_LEIS) DESC) AS RANK_LEIS
         FROM APDC.DC0021_RPT0103_COM
         WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE
         GROUP BY DIVISIONC_ID
                , DIVISION_ID
                , DIVISIOND_ID
                , DISTRICT15_ID
                , COM_ID) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD AND 
       A.DIVISIONC_ID=B.DIVISIONC_ID AND A.DIVISION_ID＝B.DIVISION_ID AND A.DIVISIOND_ID=B.DIVISIOND_ID AND A.DISTRICT15_ID=B.DISTRICT15_ID AND A.COM_ID=B.COM_ID
       A.CTR_SUPV_ID=B.CTR_SUPV_ID AND A.DIST15_SUPV_ID=B.DIST15_SUPV_ID AND A.RGN_DIR_ID=B.RGN_DIR_ID
    SET A.SALES_AMT_REACH_MKLS_MAX=B.SALES_AMT_REACH_MKLS_MAX
      , A.SALES_AMT_REACH_MKLS_DISTR=B.SALES_AMT_REACH_MKLS_DISTR
      , A.SALES_PAST_REACH_RATE_MKLS=B.SALES_PAST_REACH_RATE_MKLS
      , A.SALES_PAST_REACH_RATE_MKLS_V=B.SALES_PAST_REACH_RATE_MKLS_V
      , A.SALES_PAST_REACH_RATE_MKLS_F=B.SALES_PAST_REACH_RATE_MKLS_F
      , A.RANK_MKLS=B.RANK_MKLS
      , A.SALES_PAST_REACH_RATE_MILK=B.SALES_PAST_REACH_RATE_MILK
      , A.SALES_PAST_REACH_RATE_MILK_V=B.SALES_PAST_REACH_RATE_MILK_V
      , A.SALES_PAST_REACH_RATE_MILK_F=B.SALES_PAST_REACH_RATE_MILK_F
      , A.RANK_MILK=B.RANK_MILK
      , A.SALES_PAST_REACH_RATE_LEIS=B.SALES_PAST_REACH_RATE_LEIS
      , A.SALES_PAST_REACH_RATE_LEIS_V=B.SALES_PAST_REACH_RATE_LEIS_V
      , A.SALES_PAST_REACH_RATE_LEIS_F=B.SALES_PAST_REACH_RATE_LEIS_F
      , A.RANK_LEIS=B.RANK_LEIS
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;

 

    SET VAR_SP_RESULT='Y';
    COMMIT;
END
;