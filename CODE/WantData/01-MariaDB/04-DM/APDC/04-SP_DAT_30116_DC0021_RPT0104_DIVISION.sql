DROP PROCEDURE IF EXISTS APDC.SP_DAT_30116_DC0021_RPT0104_DIVISION;

CREATE PROCEDURE APDC.SP_DAT_30116_DC0021_RPT0104_DIVISION (
    VAR_EDI_DATE CHAR(8), VAR_EDI_TIME CHAR(9), VAR_DATA_DATE CHAR(8)
  , OUT VAR_SP_RESULT CHAR(1)
)
BEGIN

    SET @DIVISION_ID_BEV1S='飲一南' COLLATE utf8_unicode_ci;
    SET @DIVISION_ID_BEV1N='飲一北' COLLATE utf8_unicode_ci;
    SET @DIVISIOND_ID_NEW='新品' COLLATE utf8_unicode_ci;
    SET @DIVISIOND_ID_OLD='老品' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL3_ID_SWTP='莎娃利樂' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL3_ID_SWBT='莎娃瓶裝' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL3_ID_DKS='大口爽' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL3_ID_RSS='乳酸水' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL3_ID_OP='旺旺O泡' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL3_ID_OP450='O泡450' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL4_ID_DKSTP='大口爽利樂' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL4_ID_DKSBT='大口爽瓶裝' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL4_ID_DKSCAN='大口爽罐裝' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL4_ID_RSSTP='乳酸水利樂' COLLATE utf8_unicode_ci;
    SET @PROD_LEVEL4_ID_RSSBT='乳酸水瓶裝' COLLATE utf8_unicode_ci;

    --INSERT1
    INSERT INTO APDC.DC0021_RPT0104_DIVISION
    SELECT VAR_DATA_DATE AS DATA_DATE
         , VAR_DATA_DATE AS RPT_YMD
         , DIVISION_ID
         , NULL AS DIVISION_NM
         , SUM(BILLING) AS TOTAL_SALES_AMT_BEV1
         , ROUND(SUM(BILLING)/1000,0) AS TOTAL_SALES_AMT_BEV1_V
         , SUM(CASE WHEN DIVISIOND_ID=@DIVISIOND_ID_NEW THEN BILLING ELSE 0 END) AS TOTAL_SALES_AMT_NEW_PROD
         , (CASE WHEN DIVISIOND_ID=@DIVISIOND_ID_NEW THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS TOTAL_SALES_AMT_NEW_PROD_V
         , SUM(CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_SWTP THEN BILLING ELSE 0 END) AS SALES_AMT_SWTP125
         , (CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_SWTP THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_SWTP125_V
         , SUM(CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_SWBT THEN BILLING ELSE 0 END) AS SALES_AMT_SWBT275
         , (CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_SWBT THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_SWBT275_V
         , SUM(CASE WHEN PROD_LEVEL3_ID IN (@PROD_LEVEL3_ID_SWTP, @PROD_LEVEL3_ID_SWBT) THEN BILLING ELSE 0 END) AS TOTAL_SALES_AMT_SW
         , (CASE WHEN PROD_LEVEL3_ID IN (@PROD_LEVEL3_ID_SWTP, @PROD_LEVEL3_ID_SWBT) THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS TOTAL_SALES_AMT_SW_V
         , SUM(CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_DKSTP THEN BILLING ELSE 0 END) AS SALES_AMT_DKSTP125
         , (CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_DKSTP THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_DKSTP125_V
         , SUM(CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_DKSBT THEN BILLING ELSE 0 END) AS SALES_AMT_DKSBT250
         , (CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_DKSBT THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_DKSBT250_V
         , SUM(CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_DKSCAN THEN BILLING ELSE 0 END) AS SALES_AMT_DKSCAN145
         , (CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_DKSCAN THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_DKSCAN145_V
         , SUM(CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_DKS THEN BILLING ELSE 0 END) AS TOTAL_SALES_AMT_DKS
         , (CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_DKS THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS TOTAL_SALES_AMT_DKS_V
         , SUM(CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_RSSTP THEN BILLING ELSE 0 END) AS SALES_AMT_RSSTP125
         , (CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_RSSTP THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_RSSTP125_V
         , SUM(CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_RSSBT THEN SALES_AMT_PAST_MONTH ELSE 0 END) AS SALES_AMT_PAST_MONTH_RSSBT450
         , (CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_RSSBT THEN ROUND(SUM(SALES_AMT_PAST_MONTH)/1000,0) ELSE 0 END) AS SALES_AMT_PAST_MONTH_RSSBT450_V
         , SUM(CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_RSSBT THEN BILLING ELSE 0 END) AS SALES_AMT_REACH_RSSBT450
         , (CASE WHEN PROD_LEVEL4_ID=@PROD_LEVEL4_ID_RSSBT THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_REACH_RSSBT450_V
         , 0 AS SALES_PAST_REACH_RATE_RSSBT450
         , 0 AS SALES_PAST_REACH_RATE_RSSBT450_V
         , NULL AS SALES_PAST_REACH_RATE_RSSBT450_F
         , SUM(CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_RSS THEN BILLING ELSE 0 END) AS TOTAL_SALES_AMT_RSS
         , (CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_RSS THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS TOTAL_SALES_AMT_RSS_V
         , 0 AS TOTAL_BAL_NEW_PROD
         , 0 AS TOTAL_BAL_NEW_PROD_V
         , SUM(CASE WHEN DIVISIOND_ID=@DIVISIOND_ID_OLD THEN SALES_AMT_PAST_MONTH ELSE 0 END) AS SALES_AMT_PAST_MONTH_OLD_PROD
         , (CASE WHEN DIVISIOND_ID=@DIVISIOND_ID_OLD THEN ROUND(SUM(SALES_AMT_PAST_MONTH)/1000,0) ELSE 0 END) AS SALES_AMT_PAST_MONTH_OLD_PROD_V
         , SUM(CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_OP THEN BILLING ELSE 0 END) AS SALES_AMT_REACH_OP
         , (CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_OP THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_REACH_OP_V
         , SUM(CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_OP450 THEN BILLING ELSE 0 END) AS SALES_AMT_REACH_OP450
         , (CASE WHEN PROD_LEVEL3_ID=@PROD_LEVEL3_ID_OP450 THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS SALES_AMT_REACH_OP450_V
         , SUM(CASE WHEN DIVISIOND_ID=@DIVISIOND_ID_OLD THEN BILLING ELSE 0 END) AS TOTAL_SALES_AMT_OLD_PROD
         , (CASE WHEN DIVISIOND_ID=@DIVISIOND_ID_OLD THEN ROUND(SUM(BILLING)/1000,0) ELSE 0 END) AS TOTAL_SALES_AMT_OLD_PROD_V
         , 0 AS SALES_PAST_REACH_RATE_OLD_PROD
         , 0 AS SALES_PAST_REACH_RATE_OLD_PROD_V
         , NULL AS SALES_PAST_REACH_RATE_OLD_PROD_F
    FROM DMMDL.DC0021_SALES_DIST_PROD_DATE_CUM
    WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE AND DIVISION_ID IN (@DIVISION_ID_BEV1S, @DIVISION_ID_BEV1N)
    GROUP BY DIVISION_ID
    ;

    --UPDATE2
    --新品帳餘
    UPDATE APDC.DC0021_RPT0104_DIVISION A
    JOIN(SELECT M.DIVISION_ID
              , (M.INIT_BAL+M.PAY_AMT-M.BILLING) AS TOTAL_BAL_NEW_PROD
              , ROUND((M.INIT_BAL+M.PAY_AMT-M.BILLING)/1000,0) AS TOTAL_BAL_NEW_PROD_V
         FROM(
             SELECT DIVISION_ID
                  , SUM(CASE WHEN DIVISIOND_ID=@DIVISIOND_ID_NEW THEN INIT_BAL ELSE 0 END) AS INIT_BAL
                  , SUM(CASE WHEN DIVISIOND_ID=@DIVISIOND_ID_NEW THEN PAY_AMT ELSE 0 END) AS PAY_AMT
                  , SUM(CASE WHEN DIVISIOND_ID=@DIVISIOND_ID_NEW THEN BILLING ELSE 0 END) AS BILLING
             FROM DMMDL.DC0021_DIST_BAL_CUM
             WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE AND DIVISION_ID IN (@DIVISION_ID_BEV1S, @DIVISION_ID_BEV1N)
             GROUP BY DIVISION_ID
             )M) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD AND A.DIVISION_ID=B.DIVISION_ID
    SET A.TOTAL_BAL_NEW_PROD=B.TOTAL_BAL_NEW_PROD
      , A.TOTAL_BAL_NEW_PROD_V=B.TOTAL_BAL_NEW_PROD_V
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;

    --UPDATE3
    --同期達成率
    UPDATE APDC.DC0021_RPT0104_DIVISION A
    JOIN(SELECT DIVISION_ID
              , ROUND(SALES_AMT_REACH_RSSBT450/SALES_AMT_PAST_MONTH_RSSBT450,3) AS SALES_PAST_REACH_RATE_RSSBT450
              , (CASE WHEN ROUND(SALES_AMT_REACH_RSSBT450/SALES_AMT_PAST_MONTH_RSSBT450,3)<0 THEN 0.00 ELSE ROUND(SALES_AMT_REACH_RSSBT450/SALES_AMT_PAST_MONTH_RSSBT450,3) END) AS SALES_PAST_REACH_RATE_RSSBT450_V
              , (CASE WHEN SALES_AMT_PAST_MONTH_RSSBT450<=0 THEN 'A' ELSE NULL END) AS SALES_PAST_REACH_RATE_RSSBT450_F
              , ROUND(TOTAL_SALES_AMT_OLD_PROD/SALES_AMT_PAST_MONTH_OLD_PROD,3) AS SALES_PAST_REACH_RATE_OLD_PROD
              , (CASE WHEN ROUND(TOTAL_SALES_AMT_OLD_PROD/SALES_AMT_PAST_MONTH_OLD_PROD,3)<0 THEN 0.00 ELSE ROUND(TOTAL_SALES_AMT_OLD_PROD/SALES_AMT_PAST_MONTH_OLD_PROD,3) END) AS SALES_PAST_REACH_RATE_OLD_PROD_V
              , (CASE WHEN SALES_AMT_PAST_MONTH_OLD_PROD<=0 THEN 'A' ELSE NULL END) AS SALES_PAST_REACH_RATE_OLD_PROD_F
         FROM APDC.DC0021_RPT0104_DIVISION
         WHERE DATA_DATE=VAR_DATA_DATE AND RPT_YMD=VAR_DATA_DATE
         GROUP BY DIVISION_ID) B
    ON A.DATA_DATE=B.DATA_DATE AND A.RPT_YMD=B.RPT_YMD AND A.DIVISION_ID=B.DIVISION_ID
    SET A.SALES_PAST_REACH_RATE_RSSBT450=B.SALES_PAST_REACH_RATE_RSSBT450
      , A.SALES_PAST_REACH_RATE_RSSBT450_V=B.SALES_PAST_REACH_RATE_RSSBT450_V
      , A.SALES_PAST_REACH_RATE_RSSBT450_F=B.SALES_PAST_REACH_RATE_RSSBT450_F
      , A.SALES_PAST_REACH_RATE_OLD_PROD=B.SALES_PAST_REACH_RATE_OLD_PROD
      , A.SALES_PAST_REACH_RATE_OLD_PROD_V=B.SALES_PAST_REACH_RATE_OLD_PROD_V
      , A.SALES_PAST_REACH_RATE_OLD_PROD_F=B.SALES_PAST_REACH_RATE_OLD_PROD_F
    WHERE A.DATA_DATE=VAR_DATA_DATE AND A.RPT_YMD=VAR_DATA_DATE
    ;


    SET VAR_SP_RESULT='Y';
    COMMIT;
END
;