DROP PROCEDURE IF EXISTS DWWANT.SP_KA_ORDER_30103_TRAS_KA_ORDR_OPEN;

CREATE PROCEDURE DWWANT.SP_KA_ORDER_30103_TRAS_KA_ORDR_OPEN (
    VAR_EDI_NO CHAR(12), VAR_DATA_DATE CHAR(8), OUT VAR_SP_RESULT CHAR(1)
)
BEGIN
    DECLARE VAR_DATE_MIN CHAR(8);

    SET VAR_DATE_MIN = CONCAT(DATE_FORMAT(DATE_ADD(STR_TO_DATE(VAR_DATA_DATE, '%Y%m%d'), INTERVAL -3 MONTH), '%Y%m'), '01');

    INSERT INTO DWWANT.TRAS_KA_ORDR_OPEN_M
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.ID AS OPEN_SEQ
         , (CASE WHEN K.OPEN_NO='' THEN NULL ELSE K.OPEN_NO END) AS OPEN_NO
         , (CASE WHEN K.CHECK_NO='' THEN NULL ELSE K.CHECK_NO END) AS CHECK_NO
         , (CASE WHEN K.ORDER_MAIN_ID='' THEN NULL ELSE K.ORDER_MAIN_ID END) AS ORDR_MAIN_ID
         , (CASE WHEN K.ORDER_NO='' THEN NULL ELSE K.ORDER_NO END) AS SYSTEM_ORDR_NO
         , (CASE WHEN K.SAP_CUST_CODE='' THEN NULL ELSE K.SAP_CUST_CODE END) AS CUST_ID
         , (CASE WHEN K.SAP_BILL_DELIVER_CODE='' THEN NULL ELSE K.SAP_BILL_DELIVER_CODE END) AS CUST_ID_DE
         , (CASE WHEN K.KA_DELIVER_COMP_CODE='' THEN NULL ELSE K.KA_DELIVER_COMP_CODE END) AS SALES_COM_ID_DE
         , (CASE WHEN K.KA_BILL_COMP_CODE='' THEN NULL ELSE K.KA_BILL_COMP_CODE END) AS SALES_COM_ID_BL
         , (CASE WHEN K.KA_BILL_DITCH_CODE='' THEN NULL ELSE K.KA_BILL_DITCH_CODE END) AS SALES_CHAN_ID
         , (CASE WHEN K.KA_BILL_PROD_CODE='' THEN NULL ELSE K.KA_BILL_PROD_CODE END) AS PROD_DIV_ID
         , (CASE WHEN K.IS_FACT_DEV='' THEN NULL ELSE K.IS_FACT_DEV END) AS IS_FACT_DEV
         , (CASE WHEN K.OPEN_ORDER_DATE='' THEN NULL ELSE K.OPEN_ORDER_DATE END) AS OPEN_ORDR_DATE
         , (CASE WHEN K.ORDER_STATUS=-99999 THEN NULL ELSE CONVERT(K.ORDER_STATUS, CHAR) END) AS OPEN_STATUS
         , (CASE WHEN K.CREATED_BY='' THEN NULL ELSE RIGHT(CONCAT('00000000', K.CREATED_BY), 8) END) AS OPEN_USER
         , (CASE WHEN K.CREATED_TIME='' THEN NULL ELSE K.CREATED_TIME END) AS OPEN_TIME
         , (CASE WHEN K.RETURN_TIME='' THEN NULL ELSE K.RETURN_TIME END) AS RETURN_TIME
         , (CASE WHEN K.SAP_RETURN_DESC='' THEN NULL ELSE K.SAP_RETURN_DESC END) AS RETURN_RMK
         , (CASE WHEN K.SAP_ORDER_NO='' THEN NULL ELSE K.SAP_ORDER_NO END) AS SAP_ORDR_NO
    FROM RAWWANT.KA_WANTWANT_KA_SAP_ORDER K
    ;

    INSERT INTO DWWANT.TRAS_KA_ORDR_OPEN_D
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.ID AS OPEN_D_SEQ
         , (CASE WHEN K.OPEN_NO='' THEN NULL ELSE K.OPEN_NO END) AS OPEN_NO
         , (CASE WHEN K.VALID_NO='' THEN NULL ELSE CONVERT(K.VALID_NO, INT) END) AS ORDR_LINE_NUM
         , (CASE WHEN K.KA_MATERIEL_CODE='' THEN NULL ELSE K.KA_MATERIEL_CODE END) AS PROD_MATL_ID
         , (CASE WHEN K.KA_MATERIEL_CODE_REPLACE='' THEN NULL ELSE K.KA_MATERIEL_CODE_REPLACE END) AS PROD_MATL_ID_REPL
         , (CASE WHEN K.SAP_BOX_NEW_PRICE=-99999 THEN NULL ELSE K.SAP_BOX_NEW_PRICE END) AS PROD_AMT_PKG
         , (CASE WHEN K.SAP_ORDER_NUM=-99999 THEN NULL ELSE CONVERT(K.SAP_ORDER_NUM, DECIMAL) END) AS PROD_QTY_PKG
         , (CASE WHEN K.STORE_PLACE='' THEN NULL ELSE K.STORE_PLACE END) AS STORE_PLACE_CODE
         , (CASE WHEN K.SAP_RETURN_DESC='' THEN NULL ELSE K.SAP_RETURN_DESC END) AS RETURN_LINE_RMK
         , (CASE WHEN K.SAP_POSNR=-99999 THEN NULL ELSE K.SAP_POSNR END) AS SAP_LINE_NUM
         , (CASE WHEN K.SAP_PER_PRICE=-99999 THEN NULL ELSE K.SAP_PER_PRICE END) AS SAP_AMT_PKG
         , (CASE WHEN K.SAP_ORDER_CREATE_NUM=-99999 THEN NULL ELSE CONVERT(K.SAP_ORDER_CREATE_NUM, DECIMAL) END) AS SAP_QTY_PKG
    FROM RAWWANT.KA_WANTWANT_KA_SAP_ORDER_DETAIL K
    ;

    INSERT INTO DWWANT.TRAS_KA_ORDR_OPEN
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , M.OPEN_NO, M.CHECK_NO, M.ORDR_MAIN_ID, M.SYSTEM_ORDR_NO
         , M.CUST_ID, M.CUST_ID_DE
         , M.SALES_COM_ID_DE, M.SALES_COM_ID_BL, M.SALES_CHAN_ID, M.PROD_DIV_ID
         , M.IS_FACT_DEV, M.OPEN_ORDR_DATE
         , M.OPEN_STATUS, M.OPEN_USER, M.OPEN_TIME
         , M.RETURN_TIME, M.RETURN_RMK
         , M.SAP_ORDR_NO
         , D.ORDR_LINE_NUM
         , D.PROD_MATL_ID, D.PROD_MATL_ID_REPL
         , D.PROD_AMT_PKG, D.PROD_QTY_PKG
         , D.STORE_PLACE_CODE
         , (CASE WHEN M.OPEN_STATUS='4' AND M.RETURN_RMK IS NULL AND D.RETURN_LINE_RMK IS NULL THEN '其他行异常' 
                 ELSE D.RETURN_LINE_RMK END) AS RETURN_LINE_RMK
         , D.SAP_LINE_NUM
         , D.SAP_AMT_PKG, D.SAP_QTY_PKG
    FROM DWWANT.TRAS_KA_ORDR_OPEN_M M
    JOIN DWWANT.TRAS_KA_ORDR_OPEN_D D
    ON M.OPEN_NO=D.OPEN_NO
    WHERE M.OPEN_ORDR_DATE>=VAR_DATE_MIN AND M.OPEN_ORDR_DATE<=VAR_DATA_DATE
    ;

    SET VAR_SP_RESULT='Y';
    COMMIT;
END
;
