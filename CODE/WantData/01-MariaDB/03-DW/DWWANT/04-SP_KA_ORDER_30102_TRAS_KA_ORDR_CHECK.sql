DROP PROCEDURE IF EXISTS DWWANT.SP_KA_ORDER_30102_TRAS_KA_ORDR_CHECK;

CREATE PROCEDURE DWWANT.SP_KA_ORDER_30102_TRAS_KA_ORDR_CHECK (
    VAR_EDI_NO CHAR(12), VAR_DATA_DATE CHAR(8), OUT VAR_SP_RESULT CHAR(1)
)
BEGIN
    DECLARE VAR_DATE_MIN CHAR(8);

    SET VAR_DATE_MIN = CONCAT(DATE_FORMAT(DATE_ADD(STR_TO_DATE(VAR_DATA_DATE, '%Y%m%d'), INTERVAL -3 MONTH), '%Y%m'), '01');

    INSERT INTO DWWANT.TRAS_KA_ORDR_CHECK_M
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.ID AS CHECK_SEQ
         , (CASE WHEN K.CHECK_NO='' THEN NULL ELSE K.CHECK_NO END) AS CHECK_NO
         , (CASE WHEN K.ORDER_MAIN_ID='' THEN NULL ELSE K.ORDER_MAIN_ID END) AS ORDR_MAIN_ID
         , (CASE WHEN K.ORDER_NO='' THEN NULL ELSE K.ORDER_NO END) AS SYSTEM_ORDR_NO
         , (CASE WHEN K.CUST_CODE='' THEN NULL ELSE K.CUST_CODE END) AS CUST_ID
         , (CASE WHEN K.BILL_DELIVER_CODE='' THEN NULL ELSE K.BILL_DELIVER_CODE END) AS CUST_ID_DE
         , (CASE WHEN K.DELIVER_COMP_CODE='' THEN NULL ELSE K.DELIVER_COMP_CODE END) AS SALES_COM_ID_DE
         , (CASE WHEN K.BILL_COMP_CODE='' THEN NULL ELSE K.BILL_COMP_CODE END) AS SALES_COM_ID_BL
         , (CASE WHEN K.BILL_DITCH_CODE='' THEN NULL ELSE K.BILL_DITCH_CODE END) AS SALES_CHAN_ID
         , (CASE WHEN K.BILL_PROD_CODE='' THEN NULL ELSE K.BILL_PROD_CODE END) AS PROD_DIV_ID
         , (CASE WHEN K.IS_FACTDEV='' THEN NULL ELSE K.IS_FACTDEV END) AS IS_FACT_DEV
         , (CASE WHEN K.OPEN_ORDER_DATE='' THEN NULL ELSE K.OPEN_ORDER_DATE END) AS OPEN_ORDR_DATE
         , (CASE WHEN K.CHECK_STATUS=-99999 THEN NULL ELSE CONVERT(K.CHECK_STATUS, CHAR) END) AS CHECK_STATUS
         , (CASE WHEN K.CHECK_USER=-99999 THEN NULL ELSE RIGHT(CONCAT('00000000', CONVERT(K.CHECK_USER, CHAR)), 8) END) AS CHECK_USER
         , (CASE WHEN K.CHECK_DATE='' AND K.CHECK_TIME='' THEN NULL ELSE CONCAT(K.CHECK_DATE, K.CHECK_TIME) END) AS CHECK_TIME
         , (CASE WHEN K.RESULT_DATE='' AND K.RESULT_TIME='' THEN NULL ELSE CONCAT(K.RESULT_DATE, K.RESULT_TIME) END) AS RETURN_TIME
         , (CASE WHEN K.IS_OVER='' THEN NULL ELSE K.IS_OVER END) AS IS_OVER_DUE
    FROM RAWWANT.KA_WANTWANT_KA_ORDER_CHECK_RESULT K
    ;

    INSERT INTO DWWANT.TRAS_KA_ORDR_CHECK_D
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.ID AS CHECK_SEQ
         , (CASE WHEN K.CHECK_NO='' THEN NULL ELSE K.CHECK_NO END) AS CHECK_NO
         , (CASE WHEN K.ORDER_NUM='' THEN NULL ELSE CONVERT(K.ORDER_NUM, INT) END) AS ORDR_LINE_NUM
         , (CASE WHEN K.MATERIEL_CODE='' THEN NULL ELSE K.MATERIEL_CODE END) AS PROD_MATL_ID
         , (CASE WHEN K.MATERIEL_CODE_REPLACE='' THEN NULL ELSE K.MATERIEL_CODE_REPLACE END) AS PROD_MATL_ID_REPL
         , (CASE WHEN K.IS_BUY_TERM='' THEN NULL ELSE K.IS_BUY_TERM END) AS PROD_IS_SELL_TERM
         , (CASE WHEN K.ALLOW_DATE='' THEN NULL ELSE K.ALLOW_DATE END) AS PROD_ALLOW_DATE
         , (CASE WHEN K.SAP_BOX_PRICE=-99999 THEN NULL ELSE K.SAP_BOX_PRICE END) AS PROD_AMT_PKG
         , (CASE WHEN K.SAP_ORDER_NUM=-99999 THEN NULL ELSE CONVERT(K.SAP_ORDER_NUM, DECIMAL) END) AS PROD_QTY_PKG
         , (CASE WHEN K.RESULT='' THEN NULL ELSE K.RESULT END) AS RETURN_LINE_RMK
         , (CASE WHEN K.DISTRO_RESULT='' OR K.DISTRO_RESULT='正常' THEN NULL ELSE K.DISTRO_RESULT END) AS RETURN_DIST_RMK
    FROM RAWWANT.KA_WANTWANT_KA_ORDER_CHECK_DETAIL_RESULT K
    ;

    INSERT INTO DWWANT.TRAS_KA_ORDR_CHECK
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , M.CHECK_NO, M.ORDR_MAIN_ID, M.SYSTEM_ORDR_NO
         , M.CUST_ID, M.CUST_ID_DE
         , M.SALES_COM_ID_DE, M.SALES_COM_ID_BL, M.SALES_CHAN_ID, M.PROD_DIV_ID
         , M.IS_FACT_DEV, M.OPEN_ORDR_DATE
         , M.CHECK_STATUS, M.CHECK_USER, M.CHECK_TIME
         , M.RETURN_TIME, M.IS_OVER_DUE
         , D.ORDR_LINE_NUM
         , D.PROD_MATL_ID, D.PROD_MATL_ID_REPL, D.PROD_IS_SELL_TERM, D.PROD_ALLOW_DATE
         , D.PROD_AMT_PKG, D.PROD_QTY_PKG
         , D.RETURN_LINE_RMK, D.RETURN_DIST_RMK
    FROM (SELECT M.ORDR_MAIN_ID, D.ORDR_LINE_NUM, MAX(M.RETURN_TIME) AS RETURN_TIME_MAX
          FROM DWWANT.TRAS_KA_ORDR_CHECK_M M
          JOIN DWWANT.TRAS_KA_ORDR_CHECK_D D
          ON M.CHECK_NO=D.CHECK_NO
          WHERE M.OPEN_ORDR_DATE>=VAR_DATE_MIN AND M.OPEN_ORDR_DATE<=VAR_DATA_DATE
          GROUP BY M.ORDR_MAIN_ID, D.ORDR_LINE_NUM) X
    JOIN DWWANT.TRAS_KA_ORDR_CHECK_M M
    ON X.ORDR_MAIN_ID=M.ORDR_MAIN_ID AND X.RETURN_TIME_MAX=M.RETURN_TIME
    JOIN DWWANT.TRAS_KA_ORDR_CHECK_D D
    ON X.ORDR_LINE_NUM=D.ORDR_LINE_NUM AND M.CHECK_NO=D.CHECK_NO
    ;

    SET VAR_SP_RESULT='Y';
    COMMIT;
END
;
