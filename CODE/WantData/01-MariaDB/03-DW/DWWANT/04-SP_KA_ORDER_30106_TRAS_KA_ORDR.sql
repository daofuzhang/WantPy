DROP PROCEDURE IF EXISTS DWWANT.SP_KA_ORDER_30106_TRAS_KA_ORDR;

CREATE PROCEDURE DWWANT.SP_KA_ORDER_30106_TRAS_KA_ORDR (
    VAR_EDI_NO CHAR(12), VAR_DATA_DATE CHAR(8), OUT VAR_SP_RESULT CHAR(1)
)
BEGIN
    DECLARE VAR_DATE_MIN CHAR(8);

    SET VAR_DATE_MIN = CONCAT(DATE_FORMAT(DATE_ADD(STR_TO_DATE(VAR_DATA_DATE, '%Y%m%d'), INTERVAL -3 MONTH), '%Y%m'), '01');

    INSERT INTO DWWANT.TRAS_KA_ORDR_OPEN_AMT
    SELECT DISTINCT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , O.CUST_ID
         , A.OPEN_ORDR_DATE
         , (CASE WHEN O.PROD_MATL_ID_REPL IS NOT NULL THEN O.PROD_MATL_ID_REPL ELSE O.PROD_MATL_ID END) AS PROD_MATL_ID
         , O.SAP_AMT_PKG
    FROM DWWANT.ORDR_KA_SYS K
    JOIN DWWANT.TRAS_KA_ORDR_OPEN O ON K.ORDR_MAIN_ID=O.ORDR_MAIN_ID AND K.ORDR_LINE_NUM=O.ORDR_LINE_NUM
    JOIN DWWANT.TRAS_KA_ORDR_APPD A ON O.SAP_ORDR_NO=A.SAP_ORDR_NO AND O.SAP_LINE_NUM=A.SAP_LINE_NUM
    WHERE K.KA_SYSTEM_CODE IN ('H005','H016','H021','S031','S151')
      AND O.SAP_ORDR_NO IS NOT NULL AND O.RETURN_RMK IS NULL AND O.RETURN_LINE_RMK IS NULL
      AND A.RETURN_LINE_RMK IS NULL AND A.OPEN_ORDR_DATE>=VAR_DATE_MIN AND A.OPEN_ORDR_DATE<=VAR_DATA_DATE
    ;

    INSERT INTO DWWANT.TRAS_KA_ORDR
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.ORDR_MAIN_ID
         , K.KA_SYSTEM_CODE
         , K.SYSTEM_ORDR_NO
         , K.SYSTEM_ORDR_DATE
         , K.SYSTEM_DEV_TIME

         , O.CUST_ID
         , K.SALES_COM_ID_DE AS SALES_COM_ID_DE_ORDR
         , (CASE WHEN A.SALES_COM_ID_DE IS NOT NULL THEN A.SALES_COM_ID_DE ELSE O.SALES_COM_ID_DE END) AS SALES_COM_ID_DE
         , O.SALES_COM_ID_BL
         , O.SALES_CHAN_ID
         , O.PROD_DIV_ID
         , O.IS_FACT_DEV
         , A.OPEN_ORDR_DATE
        
         , O.SAP_ORDR_NO
         , O.SAP_LINE_NUM
         , K.ORDR_LINE_NUM
        
         , K.SYSTEM_ORDR_PROD_NM
         , K.PROD_MATL_ID AS PROD_MATL_ID_SYS
         , (CASE WHEN O.PROD_MATL_ID_REPL IS NOT NULL THEN O.PROD_MATL_ID_REPL ELSE O.PROD_MATL_ID END) AS PROD_MATL_ID_OPEN
        
         , O.STORE_PLACE_CODE
         , (CASE WHEN (((CASE WHEN A.SALES_COM_ID_DE IS NOT NULL THEN A.SALES_COM_ID_DE ELSE O.SALES_COM_ID_DE END)='C281' AND O.STORE_PLACE_CODE='2101') OR 
                       ((CASE WHEN A.SALES_COM_ID_DE IS NOT NULL THEN A.SALES_COM_ID_DE ELSE O.SALES_COM_ID_DE END)='C551' AND O.STORE_PLACE_CODE='1101') OR
                       ((CASE WHEN A.SALES_COM_ID_DE IS NOT NULL THEN A.SALES_COM_ID_DE ELSE O.SALES_COM_ID_DE END)='C461' AND O.STORE_PLACE_CODE='1101') OR
                       ((CASE WHEN A.SALES_COM_ID_DE IS NOT NULL THEN A.SALES_COM_ID_DE ELSE O.SALES_COM_ID_DE END)='C371' AND O.STORE_PLACE_CODE='2001') OR
                       ((CASE WHEN A.SALES_COM_ID_DE IS NOT NULL THEN A.SALES_COM_ID_DE ELSE O.SALES_COM_ID_DE END)='C141' AND O.STORE_PLACE_CODE='1101') OR
                       ((CASE WHEN A.SALES_COM_ID_DE IS NOT NULL THEN A.SALES_COM_ID_DE ELSE O.SALES_COM_ID_DE END)='C131' AND O.STORE_PLACE_CODE='1101') OR
                       ((CASE WHEN A.SALES_COM_ID_DE IS NOT NULL THEN A.SALES_COM_ID_DE ELSE O.SALES_COM_ID_DE END)='C321' AND O.STORE_PLACE_CODE='1101') OR
                       ((CASE WHEN A.SALES_COM_ID_DE IS NOT NULL THEN A.SALES_COM_ID_DE ELSE O.SALES_COM_ID_DE END)='C101' AND O.STORE_PLACE_CODE='1101')) THEN 'Y' ELSE 'N' END) AS IS_STORE_PLACE_DIR
        
         , K.PROD_AMT_PKG AS PROD_AMT_PKG_SYS
         , K.PROD_QTY_PKG AS PROD_QTY_PKG_SYS
         , O.PROD_AMT_PKG AS PROD_AMT_PKG_OPEN
         , O.PROD_QTY_PKG AS PROD_QTY_PKG_OPEN
         , O.SAP_AMT_PKG AS SAP_AMT_PKG_OPEN
         , O.SAP_QTY_PKG AS SAP_QTY_PKG_OPEN
         , A.SAP_AMT_PKG AS SAP_AMT_PKG_APPD
         , A.SAP_QTY_PKG AS SAP_QTY_PKG_APPD
         , T.SHIP_QTY_PKG_DEV
         , T.SHIP_QTY_PKG_DIF
         , T.SHIP_QTY_PKG_ACT
    FROM DWWANT.ORDR_KA_SYS K
    JOIN DWWANT.TRAS_KA_ORDR_OPEN O ON K.ORDR_MAIN_ID=O.ORDR_MAIN_ID AND K.ORDR_LINE_NUM=O.ORDR_LINE_NUM
    JOIN DWWANT.TRAS_KA_ORDR_APPD A ON O.SAP_ORDR_NO=A.SAP_ORDR_NO AND O.SAP_LINE_NUM=A.SAP_LINE_NUM
    LEFT JOIN DWWANT.TRAS_KA_ORDR_SHIP T ON O.SAP_ORDR_NO=T.SAP_ORDR_NO AND O.SAP_LINE_NUM=T.SAP_LINE_NUM
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND O.SAP_ORDR_NO IS NOT NULL AND O.RETURN_RMK IS NULL AND O.RETURN_LINE_RMK IS NULL
      AND A.RETURN_LINE_RMK IS NULL
    ;

    INSERT INTO DWWANT.ORDR_KA
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.ORDR_MAIN_ID
         , K.KA_SYSTEM_CODE
         , K.CUST_ID
         , K.SALES_COM_ID_DE
         , K.SALES_COM_ID_BL
         , K.SALES_CHAN_ID
         , K.PROD_DIV_ID
         , K.SYSTEM_ORDR_NO
         , K.SYSTEM_ORDR_DATE
         , K.SYSTEM_DEV_TIME
         , K.ORDR_LINE_NUM
         , K.SYSTEM_ORDR_PROD_NM
         , K.PROD_MATL_ID
         , K.PROD_AMT_PKG
         , K.PROD_QTY_PKG
         , K.ORDR_STATUS
         , K.ORDR_IS_INVALID
         , K.ORDR_INVALID_RMK
         , K.ORDR_LINE_IS_INVALID
         , K.ORDR_LINE_RESIDUAL_TYPE

         , S.SAP_QTY_PKG_APPD_SUM
         , S.SAP_QTY_PKG_APPD_SUM_DIR
         , (K.PROD_QTY_PKG-IFNULL(S.SAP_QTY_PKG_APPD_SUM,0)) AS SAP_QTY_PKG_APPD_SUM_DIF
         , S.SHIP_QTY_PKG_DEV_SUM
         , S.SHIP_QTY_PKG_DIF_SUM
         , S.SHIP_QTY_PKG_ACT_SUM
         , (K.PROD_QTY_PKG-CONVERT(IFNULL(S.SHIP_QTY_PKG_ACT_SUM,0), DECIMAL(21, 4))) AS SHIP_QTY_PKG_ACT_SUM_DIF

         , NULL AS TRAS_OPEN_ORDR_DATE
         , IFNULL(K.PROD_AMT_PKG, 0) AS TRAS_PROD_AMT_PKG
         , NULL AS TRAS_RETURN_PHASE
         , NULL AS TRAS_RETURN_RMK
         , NULL AS TRAS_RETURN_LINE_TIME
    FROM DWWANT.ORDR_KA_SYS K
    LEFT JOIN (SELECT ORDR_MAIN_ID, ORDR_LINE_NUM
                    , SUM(SAP_QTY_PKG_APPD) AS SAP_QTY_PKG_APPD_SUM
                    , SUM(CASE WHEN IS_STORE_PLACE_DIR='Y' THEN SAP_QTY_PKG_APPD ELSE 0 END) AS SAP_QTY_PKG_APPD_SUM_DIR
                    , SUM(IFNULL(SHIP_QTY_PKG_DEV,0)) AS SHIP_QTY_PKG_DEV_SUM
                    , SUM(IFNULL(SHIP_QTY_PKG_DIF,0)) AS SHIP_QTY_PKG_DIF_SUM
                    , SUM(IFNULL(SHIP_QTY_PKG_ACT,0)) AS SHIP_QTY_PKG_ACT_SUM
               FROM DWWANT.TRAS_KA_ORDR
               GROUP BY ORDR_MAIN_ID, ORDR_LINE_NUM) S
    ON K.ORDR_MAIN_ID=S.ORDR_MAIN_ID AND K.ORDR_LINE_NUM=S.ORDR_LINE_NUM
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
    ;

    UPDATE DWWANT.ORDR_KA
    SET TRAS_RETURN_RMK=(CASE WHEN ORDR_LINE_RESIDUAL_TYPE='01' THEN '剩余原因-库存变动'
                              WHEN ORDR_LINE_RESIDUAL_TYPE='02' THEN '剩余原因-订单异常'
                              WHEN ORDR_LINE_RESIDUAL_TYPE='03' THEN '剩余原因-特殊原因终止订单'
                              WHEN ORDR_LINE_IS_INVALID='Y' THEN '不开单品项'
                              WHEN ORDR_IS_INVALID='Y' AND ORDR_INVALID_RMK IS NULL THEN '订单作废-未录入原因'
                              WHEN ORDR_IS_INVALID='Y' THEN CONCAT('订单作废-', ORDR_INVALID_RMK)
                              WHEN ORDR_STATUS='1' THEN '匹配异常-开单客户'
                              WHEN ORDR_STATUS='2' THEN '匹配异常-物料'
                              WHEN ORDR_STATUS='3' THEN '匹配异常-开单客户及物料'
                              ELSE NULL
                        END)
    WHERE SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND SYSTEM_ORDR_DATE<=VAR_DATA_DATE
    ;

    UPDATE DWWANT.ORDR_KA
    SET TRAS_RETURN_PHASE='S'
    WHERE SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND TRAS_RETURN_RMK IS NOT NULL
    ;

    UPDATE DWWANT.ORDR_KA K
    JOIN (SELECT *
          FROM DWWANT.ORDR_KA_SYS
          WHERE CUST_ID_DE IS NULL) O
    ON K.ORDR_MAIN_ID=O.ORDR_MAIN_ID AND K.ORDR_LINE_NUM=O.ORDR_LINE_NUM
    SET K.TRAS_RETURN_PHASE='S'
      , K.TRAS_RETURN_RMK='匹配异常-开单送达方'
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND K.TRAS_RETURN_PHASE IS NULL
    ;

    UPDATE DWWANT.ORDR_KA K
    JOIN (SELECT X.ORDR_MAIN_ID, X.ORDR_LINE_NUM, A.RETURN_TIME, A.RETURN_LINE_RMK
          FROM (SELECT O.ORDR_MAIN_ID, O.ORDR_LINE_NUM, MAX(A.RETURN_TIME) AS RETURN_TIME_MAX
                FROM DWWANT.TRAS_KA_ORDR_APPD A
                JOIN DWWANT.TRAS_KA_ORDR_OPEN O
                ON A.SAP_ORDR_NO=O.SAP_ORDR_NO AND A.SAP_LINE_NUM=O.SAP_LINE_NUM
                WHERE A.RETURN_LINE_RMK IS NOT NULL
                GROUP BY O.ORDR_MAIN_ID, O.ORDR_LINE_NUM) X
          JOIN (SELECT O.ORDR_MAIN_ID, O.ORDR_LINE_NUM, A.RETURN_TIME, A.RETURN_LINE_RMK
                FROM DWWANT.TRAS_KA_ORDR_APPD A
                JOIN DWWANT.TRAS_KA_ORDR_OPEN O
                ON A.SAP_ORDR_NO=O.SAP_ORDR_NO AND A.SAP_LINE_NUM=O.SAP_LINE_NUM
                WHERE A.RETURN_LINE_RMK IS NOT NULL) A
          ON X.ORDR_MAIN_ID=A.ORDR_MAIN_ID AND X.ORDR_LINE_NUM=A.ORDR_LINE_NUM AND X.RETURN_TIME_MAX=A.RETURN_TIME) T
    ON K.ORDR_MAIN_ID=T.ORDR_MAIN_ID AND K.ORDR_LINE_NUM=T.ORDR_LINE_NUM
    SET K.TRAS_RETURN_PHASE='A'
      , K.TRAS_RETURN_RMK=T.RETURN_LINE_RMK
      , K.TRAS_RETURN_LINE_TIME=T.RETURN_TIME
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND K.SAP_QTY_PKG_APPD_SUM_DIF>0
      AND (K.TRAS_RETURN_PHASE IS NULL OR K.TRAS_RETURN_PHASE<>'S')
      AND (K.TRAS_RETURN_LINE_TIME IS NULL OR K.TRAS_RETURN_LINE_TIME<T.RETURN_TIME)
    ;

    UPDATE DWWANT.ORDR_KA K
    JOIN (SELECT O.ORDR_MAIN_ID, O.ORDR_LINE_NUM, O.RETURN_TIME
          FROM DWWANT.TRAS_KA_ORDR_OPEN O
          LEFT JOIN DWWANT.TRAS_KA_ORDR_APPD A
          ON O.SAP_ORDR_NO=A.SAP_ORDR_NO AND O.SAP_LINE_NUM=A.SAP_LINE_NUM
          WHERE O.SAP_ORDR_NO IS NOT NULL AND O.RETURN_RMK IS NULL AND O.RETURN_LINE_RMK IS NULL
            AND A.SAP_ORDR_NO IS NULL) T
    ON K.ORDR_MAIN_ID=T.ORDR_MAIN_ID AND K.ORDR_LINE_NUM=T.ORDR_LINE_NUM
    SET K.TRAS_RETURN_PHASE='O'
      , K.TRAS_RETURN_RMK='未审核'
      , K.TRAS_RETURN_LINE_TIME=T.RETURN_TIME
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND K.SAP_QTY_PKG_APPD_SUM_DIF>0
      AND (K.TRAS_RETURN_PHASE IS NULL OR K.TRAS_RETURN_PHASE<>'S')
      AND (K.TRAS_RETURN_LINE_TIME IS NULL OR K.TRAS_RETURN_LINE_TIME<T.RETURN_TIME)
    ;

    UPDATE DWWANT.ORDR_KA K
    JOIN (SELECT O.ORDR_MAIN_ID, O.ORDR_LINE_NUM, O.RETURN_TIME, O.RETURN_RMK, O.RETURN_LINE_RMK
          FROM DWWANT.TRAS_KA_ORDR_OPEN O
          JOIN (SELECT ORDR_MAIN_ID, ORDR_LINE_NUM, MAX(RETURN_TIME) AS RETURN_TIME_MAX
                FROM DWWANT.TRAS_KA_ORDR_OPEN
                WHERE SAP_ORDR_NO IS NULL OR RETURN_RMK IS NOT NULL OR RETURN_LINE_RMK IS NOT NULL
                GROUP BY ORDR_MAIN_ID, ORDR_LINE_NUM) X
          ON O.ORDR_MAIN_ID=X.ORDR_MAIN_ID AND O.ORDR_LINE_NUM=X.ORDR_LINE_NUM AND O.RETURN_TIME=X.RETURN_TIME_MAX) T
    ON K.ORDR_MAIN_ID=T.ORDR_MAIN_ID AND K.ORDR_LINE_NUM=T.ORDR_LINE_NUM
    SET K.TRAS_RETURN_PHASE='O'
      , K.TRAS_RETURN_RMK=(CASE WHEN T.RETURN_RMK IS NOT NULL THEN T.RETURN_RMK
                                WHEN T.RETURN_LINE_RMK IS NOT NULL THEN T.RETURN_LINE_RMK
                                ELSE NULL
                           END)
      , K.TRAS_RETURN_LINE_TIME=T.RETURN_TIME
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND K.SAP_QTY_PKG_APPD_SUM_DIF>0
      AND (K.TRAS_RETURN_PHASE IS NULL OR K.TRAS_RETURN_PHASE<>'S')
      AND (K.TRAS_RETURN_LINE_TIME IS NULL OR K.TRAS_RETURN_LINE_TIME<T.RETURN_TIME)
    ;

    UPDATE DWWANT.ORDR_KA K
    JOIN (SELECT ORDR_MAIN_ID, ORDR_LINE_NUM, RETURN_TIME, IS_OVER_DUE, RETURN_LINE_RMK, RETURN_DIST_RMK
          FROM DWWANT.TRAS_KA_ORDR_CHECK
          WHERE IS_OVER_DUE='Y' OR RETURN_LINE_RMK IS NOT NULL OR RETURN_DIST_RMK IS NOT NULL) T
    ON K.ORDR_MAIN_ID=T.ORDR_MAIN_ID AND K.ORDR_LINE_NUM=T.ORDR_LINE_NUM
    SET K.TRAS_RETURN_PHASE='C'
      , K.TRAS_RETURN_RMK=(CASE WHEN T.IS_OVER_DUE='Y' THEN '检查返回-逾期'
                                WHEN T.RETURN_LINE_RMK IS NOT NULL THEN T.RETURN_LINE_RMK
                                WHEN T.RETURN_DIST_RMK IS NOT NULL THEN T.RETURN_DIST_RMK
                                ELSE NULL
                           END)
      , K.TRAS_RETURN_LINE_TIME=T.RETURN_TIME
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND K.SAP_QTY_PKG_APPD_SUM_DIF>0
      AND (K.TRAS_RETURN_PHASE IS NULL OR K.TRAS_RETURN_PHASE<>'S')
      AND (K.TRAS_RETURN_LINE_TIME IS NULL OR K.TRAS_RETURN_LINE_TIME<T.RETURN_TIME)
    ;

    UPDATE DWWANT.ORDR_KA K
    JOIN (SELECT C.ORDR_MAIN_ID, C.ORDR_LINE_NUM, C.RETURN_TIME
          FROM DWWANT.TRAS_KA_ORDR_CHECK C
          LEFT JOIN DWWANT.TRAS_KA_ORDR_OPEN O
          ON C.CHECK_NO=O.CHECK_NO AND C.ORDR_MAIN_ID=O.ORDR_MAIN_ID AND C.ORDR_LINE_NUM=O.ORDR_LINE_NUM
          WHERE C.IS_OVER_DUE='N' AND C.RETURN_LINE_RMK IS NULL AND RETURN_DIST_RMK IS NULL
            AND O.CHECK_NO IS NULL) T
    ON K.ORDR_MAIN_ID=T.ORDR_MAIN_ID AND K.ORDR_LINE_NUM=T.ORDR_LINE_NUM
    SET K.TRAS_RETURN_PHASE='C'
      , K.TRAS_RETURN_RMK='未开单'
      , K.TRAS_RETURN_LINE_TIME=T.RETURN_TIME
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND K.SAP_QTY_PKG_APPD_SUM_DIF>0
      AND (K.TRAS_RETURN_PHASE IS NULL OR K.TRAS_RETURN_PHASE<>'S')
      AND (K.TRAS_RETURN_LINE_TIME IS NULL OR K.TRAS_RETURN_LINE_TIME<T.RETURN_TIME)
    ;

    UPDATE DWWANT.ORDR_KA
    SET TRAS_RETURN_PHASE='Z'
      , TRAS_RETURN_RMK=NULL
    WHERE SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND TRAS_RETURN_PHASE IS NULL
      AND SAP_QTY_PKG_APPD_SUM_DIF<=0
    ;

    UPDATE DWWANT.ORDR_KA
    SET TRAS_RETURN_PHASE='S'
      , TRAS_RETURN_RMK='剩余原因-未录入原因'
    WHERE SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND TRAS_RETURN_PHASE IS NULL
      AND SAP_QTY_PKG_APPD_SUM_DIF>0
      AND SAP_QTY_PKG_APPD_SUM IS NOT NULL AND SAP_QTY_PKG_APPD_SUM>0
    ;

    UPDATE DWWANT.ORDR_KA
    SET TRAS_RETURN_PHASE='S'
      , TRAS_RETURN_RMK='未有任何操作'
    WHERE SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND TRAS_RETURN_PHASE IS NULL
    ;

    UPDATE DWWANT.ORDR_KA K
    SET TRAS_RETURN_RMK=(CASE WHEN LOCATE(';', TRAS_RETURN_RMK)<=0 THEN TRAS_RETURN_RMK
                              ELSE LEFT(TRAS_RETURN_RMK, LOCATE(';', TRAS_RETURN_RMK))
                         END)
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
    ;

    UPDATE DWWANT.ORDR_KA K
    SET TRAS_RETURN_RMK=(CASE WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%S01 开单返回-额度不足%' THEN '开单返回-额度不足'
                              WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%S06 开单返回-库存不足%' THEN '开单返回-库存不足'
                              WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%价格中有重复项，请检查%' THEN '开单返回-原价开单价格异常'
                              WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%存在传入物料未创建预留%' THEN '开单返回-预留未创建'
                              WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%预留发生异常%' THEN '开单返回-预留发生异常'
                              WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%S05-开单返回%' THEN '开单返回-预留量不足'
                              WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%已经达到最高供货量%' THEN '开单返回-已经达到最高供货量'
                              WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%冻结储备%' THEN '开单返回-冻结储备'
                              WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%工厂数据被用户%' THEN '开单返回-工厂数据锁定'
                              WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%请关联CRM促销执行案%' THEN '开单返回-未关联CRM促销执行案'
                              WHEN TRAS_RETURN_PHASE='O' AND TRAS_RETURN_RMK LIKE '%没有可用的项目类别%' THEN '开单返回-错误销售凭证'
                              WHEN TRAS_RETURN_PHASE='C' AND TRAS_RETURN_RMK LIKE '%逾期%' THEN '检查返回-逾期'
                              WHEN TRAS_RETURN_PHASE='C' AND TRAS_RETURN_RMK LIKE '%C02 检查返回-可销异常%' THEN '检查返回-可销异常'
                              WHEN TRAS_RETURN_PHASE='C' AND TRAS_RETURN_RMK LIKE '%C03 检查返回-价格异常%' THEN '检查返回-价格异常'
                              WHEN TRAS_RETURN_PHASE='C' AND TRAS_RETURN_RMK LIKE '%C04 检查返回-无库存数量%' THEN '检查返回-无库存数量'
                              WHEN TRAS_RETURN_PHASE='C' AND TRAS_RETURN_RMK LIKE '%C05 检查返回-超过最高供货量%' THEN '检查返回-超过最高供货量'
                              WHEN TRAS_RETURN_PHASE='C' AND TRAS_RETURN_RMK LIKE '%D05 分配后-预留量不足%' THEN '检查返回-分配后-预留量不足'
                              WHEN TRAS_RETURN_PHASE='C' AND TRAS_RETURN_RMK LIKE '%D06 分配后-库存不足%' THEN '检查返回-分配后-库存不足'
                              WHEN TRAS_RETURN_PHASE='C' AND TRAS_RETURN_RMK LIKE '%D07 分配后-符合允收生产日期箱数不足%' THEN '检查返回-分配后-符合允收生产日期箱数不足'
                              ELSE TRAS_RETURN_RMK
                         END)
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
    ;

    UPDATE DWWANT.ORDR_KA K
    JOIN (SELECT ORDR_MAIN_ID, ORDR_LINE_NUM, MAX(SAP_AMT_PKG_OPEN) AS SAP_AMT_PKG_OPEN_MAX
          FROM DWWANT.TRAS_KA_ORDR
          GROUP BY ORDR_MAIN_ID, ORDR_LINE_NUM) T
    ON K.ORDR_MAIN_ID=T.ORDR_MAIN_ID AND K.ORDR_LINE_NUM=T.ORDR_LINE_NUM
    SET K.TRAS_PROD_AMT_PKG=T.SAP_AMT_PKG_OPEN_MAX
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND K.KA_SYSTEM_CODE IN ('H005','H016','H021','S031','S151')
      AND K.TRAS_PROD_AMT_PKG=0
    ;

    UPDATE DWWANT.ORDR_KA K
    SET K.TRAS_OPEN_ORDR_DATE=(SELECT MAX(T.OPEN_ORDR_DATE) AS OPEN_ORDR_DATE_MAX
                               FROM DWWANT.TRAS_KA_ORDR_OPEN_AMT T
                               WHERE T.OPEN_ORDR_DATE<=K.SYSTEM_ORDR_DATE
                                 AND T.CUST_ID=K.CUST_ID
                                 AND T.PROD_MATL_ID=K.PROD_MATL_ID)
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND K.KA_SYSTEM_CODE IN ('H005','H016','H021','S031','S151')
      AND K.TRAS_PROD_AMT_PKG=0
    ;

    UPDATE DWWANT.ORDR_KA K
    SET K.TRAS_PROD_AMT_PKG=(SELECT SAP_AMT_PKG
                             FROM DWWANT.TRAS_KA_ORDR_OPEN_AMT T
                             WHERE T.OPEN_ORDR_DATE=K.TRAS_OPEN_ORDR_DATE
                               AND T.CUST_ID=K.CUST_ID
                               AND T.PROD_MATL_ID=K.PROD_MATL_ID)
    WHERE K.SYSTEM_ORDR_DATE>=VAR_DATE_MIN AND K.SYSTEM_ORDR_DATE<=VAR_DATA_DATE
      AND K.KA_SYSTEM_CODE IN ('H005','H016','H021','S031','S151')
      AND K.TRAS_PROD_AMT_PKG=0
      AND K.TRAS_OPEN_ORDR_DATE IS NOT NULL
    ;

    SET VAR_SP_RESULT='Y';
    COMMIT;
END
;
