DROP PROCEDURE IF EXISTS DWWANT.SP_DC0024_RPT_30101_STORE_MATL_D;

CREATE PROCEDURE DWWANT.SP_DC0024_RPT_30101_STORE_MATL_D (
    VAR_EDI_NO CHAR(12), VAR_DATA_DATE CHAR(8), OUT VAR_SP_RESULT CHAR(1)
)
BEGIN
    DECLARE VAR_POS_DATE CHAR(8);

    SET VAR_POS_DATE = DWWANT.FN_GET_DATE(DATE_ADD(CONVERT(VAR_DATA_DATE, DATE), INTERVAL -2 DAY));

    INSERT INTO DMMDL.DC0024_STORE_MATL_D
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , A.KA_SYSTEM_CODE, DWWANT.FN_GET_CM_KA_SYSTEM_NM(A.KA_SYSTEM_CODE) AS KA_SYSTEM_NM
         , A.KA_STORE_WH_CODE, SUBSTRING(MIN(A.KA_STORE_WH_NM),2) AS KA_STORE_WH_NM
         , MAX(A.STORE_WH_TYPE) AS STORE_WH_TYPE, DMMDL.FN_GET_CM_CODE_NM('0002', MAX(A.STORE_WH_TYPE)) AS STORE_WH_TYPE_NM
         , MAX(A.SALES_COM_ID_SA) AS SALES_COM_ID_SA, DWWANT.FN_GET_ORG_SALES_COM_ABR(MAX(A.SALES_COM_ID_SA)) AS SALES_COM_ABR_SA
         , MAX(A.SALES_COM_ID_WH) AS SALES_COM_ID_WH, DWWANT.FN_GET_ORG_SALES_COM_ABR(MAX(A.SALES_COM_ID_WH)) AS SALES_COM_ABR_WH
         , MAX(A.SALES_COM_ID_DE) AS SALES_COM_ID_DE, DWWANT.FN_GET_ORG_SALES_COM_ABR(MAX(A.SALES_COM_ID_DE)) AS SALES_COM_ABR_DE
         , MAX(P.PROD_H1_ID) AS PROD_H1_ID, DWWANT.FN_GET_PROD_HIER_NM(MAX(P.PROD_H1_ID)) AS PROD_H1_NM
         , MAX(P.PROD_H2_ID) AS PROD_H2_ID, DWWANT.FN_GET_PROD_HIER_NM(MAX(P.PROD_H2_ID)) AS PROD_H2_NM
         , A.PROD_MATL_ID, MAX(P.PROD_MATL_NM) AS PROD_MATL_NM
         , VAR_POS_DATE AS POS_INV_DATE
         , 0 AS POS_QTY_PCS, 0 AS POS_QTY_PKG, 0 AS POS_AMT
         , 0 AS INV_QTY_PCS, 0 AS INV_QTY_PKG
    FROM (SELECT KA_SYSTEM_CODE
               , KA_STORE_CODE AS KA_STORE_WH_CODE, CONCAT('D', KA_STORE_NM) AS KA_STORE_WH_NM, 'D' AS STORE_WH_TYPE
               , SALES_COM_ID_SA, SALES_COM_ID_WH, SALES_COM_ID_DE
               , PROD_MATL_ID
          FROM DWWANT.TRAS_KA_POS_MATL_D
          WHERE POS_DATE=VAR_POS_DATE
          UNION
          SELECT KA_SYSTEM_CODE
               , KA_STORE_CODE AS KA_STORE_WH_CODE, CONCAT('D', KA_STORE_NM) AS KA_STORE_WH_NM, 'D' AS STORE_WH_TYPE
               , SALES_COM_ID_SA, SALES_COM_ID_WH, SALES_COM_ID_DE
               , PROD_MATL_ID
          FROM DWWANT.TRAS_KA_INV_STORE_D
          WHERE INV_DATE=VAR_POS_DATE
          UNION
          SELECT KA_SYSTEM_CODE
               , KA_WH_CODE AS KA_STORE_WH_CODE, CONCAT('W', KA_WH_NM) AS KA_STORE_WH_NM, 'W' AS STORE_WH_TYPE
               , NULL AS SALES_COM_ID_SA, SALES_COM_ID_WH, SALES_COM_ID_DE
               , PROD_MATL_ID
          FROM DWWANT.TRAS_KA_INV_WH_D
          WHERE INV_DATE=VAR_POS_DATE) A
    LEFT JOIN DWWANT.PROD_MATL P ON A.PROD_MATL_ID=P.PROD_MATL_ID
    GROUP BY A.KA_SYSTEM_CODE, A.KA_STORE_WH_CODE, A.PROD_MATL_ID
    ;

    UPDATE DMMDL.DC0024_STORE_MATL_D M
    JOIN (SELECT * FROM DWWANT.TRAS_KA_POS_MATL_D WHERE POS_DATE=VAR_POS_DATE) W
    ON M.KA_SYSTEM_CODE=W.KA_SYSTEM_CODE AND M.KA_STORE_WH_CODE=W.KA_STORE_CODE AND
       M.PROD_MATL_ID=W.PROD_MATL_ID
    SET M.POS_QTY_PCS=W.POS_QTY_PCS, M.POS_QTY_PKG=W.POS_QTY_PKG, M.POS_AMT=W.POS_AMT
    ;

    UPDATE DMMDL.DC0024_STORE_MATL_D M
    JOIN (SELECT * FROM DWWANT.TRAS_KA_INV_STORE_D WHERE INV_DATE=VAR_POS_DATE) W
    ON M.KA_SYSTEM_CODE=W.KA_SYSTEM_CODE AND M.KA_STORE_WH_CODE=W.KA_STORE_CODE AND
       M.PROD_MATL_ID=W.PROD_MATL_ID
    SET M.INV_QTY_PCS=W.INV_QTY_PCS, M.INV_QTY_PKG=W.INV_QTY_PKG
    ;

    UPDATE DMMDL.DC0024_STORE_MATL_D M
    JOIN (SELECT * FROM DWWANT.TRAS_KA_INV_WH_D WHERE INV_DATE=VAR_POS_DATE) W
    ON M.KA_SYSTEM_CODE=W.KA_SYSTEM_CODE AND M.KA_STORE_WH_CODE=W.KA_WH_CODE AND
       M.PROD_MATL_ID=W.PROD_MATL_ID
    SET M.INV_QTY_PCS=W.INV_QTY_PCS, M.INV_QTY_PKG=W.INV_QTY_PKG
    ;

    SET VAR_SP_RESULT='Y';
    COMMIT;
END
;