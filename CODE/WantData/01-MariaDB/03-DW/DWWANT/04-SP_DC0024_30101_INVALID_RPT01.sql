DROP PROCEDURE IF EXISTS DWWANT.SP_DC0024_30101_INVALID_RPT01;

CREATE PROCEDURE DWWANT.SP_DC0024_30101_INVALID_RPT01 (
    VAR_EDI_NO CHAR(12), VAR_DATA_DATE CHAR(8), OUT VAR_SP_RESULT CHAR(1)
)
BEGIN
    DECLARE VAR_AUTO_EDI_NO CHAR(12);
    DECLARE VAR_POS_DATE_MIN CHAR(8);
    DECLARE VAR_POS_DATE_MAX CHAR(8);
    DECLARE VAR_INV_DATE_MIN CHAR(8);
    DECLARE VAR_INV_DATE_MAX CHAR(8);

    SELECT AUTO_EDI_NO INTO VAR_AUTO_EDI_NO
    FROM DWWANT.EDI_FLOW
    WHERE EDI_NO=VAR_EDI_NO;

    SELECT POS_DATE_MIN, POS_DATE_MAX, INV_DATE_MIN, INV_DATE_MAX
      INTO VAR_POS_DATE_MIN, VAR_POS_DATE_MAX, VAR_INV_DATE_MIN, VAR_INV_DATE_MAX
    FROM DWWANT.EDI_FLOW_DWWANT_KA
    WHERE EDI_NO=VAR_AUTO_EDI_NO;

    INSERT INTO DMMDL.DC0024_INVALID_RPT01
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , VAR_POS_DATE_MIN AS POS_DATE_MIN, VAR_POS_DATE_MAX AS POS_DATE_MAX
    ;

    INSERT INTO DMMDL.DC0024_INVALID_RPT01_PROD_POS
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.KA_SYSTEM_CODE
         , DWWANT.FN_GET_CM_KA_SYSTEM_NM(K.KA_SYSTEM_CODE) AS KA_SYSTEM_NM
         , IFNULL(K.SYSTEM_PROD_CODE, 'NULL') AS SYSTEM_PROD_CODE
         , IFNULL(K.SYSTEM_PROD_NM, 'NULL') AS SYSTEM_PROD_NM
         , MIN(K.POS_DATE) AS POS_DATE_MIN
         , MAX(K.POS_DATE) AS POS_DATE_MAX
    FROM DWWANT.TRAS_KA_POS K
    LEFT JOIN DWWANT.TRAS_KA_MRK_PROD M
    ON K.KA_SYSTEM_CODE=M.KA_SYSTEM_CODE AND
       ((K.SYSTEM_PROD_CODE=M.SYSTEM_PROD_CODE) OR 
        (K.SYSTEM_PROD_CODE IS NULL AND K.SYSTEM_PROD_NM=M.SYSTEM_PROD_NM))
    WHERE K.POS_DATE>=VAR_POS_DATE_MIN AND K.POS_DATE<=VAR_POS_DATE_MAX AND K.PROD_MATL_ID IS NULL
      AND K.POS_TYPE='S'
      AND (M.MRK_PROD IS NULL OR (M.SYSTEM_PROD_CODE IS NULL AND K.SYSTEM_PROD_CODE IS NULL))
    GROUP BY K.KA_SYSTEM_CODE, K.SYSTEM_PROD_CODE, K.SYSTEM_PROD_NM
    ;
    COMMIT;

    INSERT INTO DMMDL.DC0024_INVALID_RPT01_PROD_INV
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.KA_SYSTEM_CODE
         , DWWANT.FN_GET_CM_KA_SYSTEM_NM(K.KA_SYSTEM_CODE) AS KA_SYSTEM_NM
         , IFNULL(K.SYSTEM_PROD_CODE, 'NULL') AS SYSTEM_PROD_CODE
         , IFNULL(K.SYSTEM_PROD_NM, 'NULL') AS SYSTEM_PROD_NM
         , MIN(K.INV_DATE) AS INV_DATE_MIN
         , MAX(K.INV_DATE) AS INV_DATE_MAX
    FROM DWWANT.TRAS_KA_INV K
    LEFT JOIN DWWANT.TRAS_KA_MRK_PROD M
    ON K.KA_SYSTEM_CODE=M.KA_SYSTEM_CODE AND
       ((K.SYSTEM_PROD_CODE=M.SYSTEM_PROD_CODE) OR 
        (K.SYSTEM_PROD_CODE IS NULL AND K.SYSTEM_PROD_NM=M.SYSTEM_PROD_NM))
    WHERE K.INV_DATE>=VAR_INV_DATE_MIN AND K.INV_DATE<=VAR_INV_DATE_MAX AND K.PROD_MATL_ID IS NULL
      AND (M.MRK_PROD IS NULL OR (M.SYSTEM_PROD_CODE IS NULL AND K.SYSTEM_PROD_CODE IS NULL))
    GROUP BY K.KA_SYSTEM_CODE, K.SYSTEM_PROD_CODE, K.SYSTEM_PROD_NM
    ;
    COMMIT;

    INSERT INTO DMMDL.DC0024_INVALID_RPT01_STORE_POS
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.KA_SYSTEM_CODE
         , DWWANT.FN_GET_CM_KA_SYSTEM_NM(K.KA_SYSTEM_CODE) AS KA_SYSTEM_NM
         , IFNULL(K.SYSTEM_STORE_CODE, 'NULL') AS SYSTEM_STORE_CODE
         , IFNULL(K.SYSTEM_STORE_NM, 'NULL') AS SYSTEM_STORE_NM
         , MIN(K.POS_DATE) AS POS_DATE_MIN
         , MAX(K.POS_DATE) AS POS_DATE_MAX
    FROM DWWANT.TRAS_KA_POS K
    LEFT JOIN (SELECT * FROM DWWANT.TRAS_KA_MRK_STORE WHERE MRK_STORE_POS IS NOT NULL) M
    ON K.KA_SYSTEM_CODE=M.KA_SYSTEM_CODE AND
       ((K.SYSTEM_STORE_CODE=M.SYSTEM_STORE_CODE) OR 
        (K.SYSTEM_STORE_CODE IS NULL AND K.SYSTEM_STORE_NM=M.SYSTEM_STORE_NM))
    WHERE K.POS_DATE>=VAR_POS_DATE_MIN AND K.POS_DATE<=VAR_POS_DATE_MAX AND K.KA_STORE_CODE IS NULL
      AND K.POS_TYPE='S'
      AND (M.MRK_STORE_POS IS NULL OR (M.SYSTEM_STORE_CODE IS NULL AND K.SYSTEM_STORE_CODE IS NULL))
    GROUP BY K.KA_SYSTEM_CODE, K.SYSTEM_STORE_CODE, K.SYSTEM_STORE_NM
    ;
    COMMIT;

    INSERT INTO DMMDL.DC0024_INVALID_RPT01_STORE_INV
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.KA_SYSTEM_CODE
         , DWWANT.FN_GET_CM_KA_SYSTEM_NM(K.KA_SYSTEM_CODE) AS KA_SYSTEM_NM
         , IFNULL(K.SYSTEM_STORE_CODE, 'NULL') AS SYSTEM_STORE_CODE
         , IFNULL(K.SYSTEM_STORE_NM, 'NULL') AS SYSTEM_STORE_NM
         , MIN(K.INV_DATE) AS INV_DATE_MIN
         , MAX(K.INV_DATE) AS INV_DATE_MAX
    FROM DWWANT.TRAS_KA_INV K
    LEFT JOIN (SELECT * FROM DWWANT.TRAS_KA_MRK_STORE WHERE MRK_STORE_INV IS NOT NULL) M
    ON K.KA_SYSTEM_CODE=M.KA_SYSTEM_CODE AND
       ((K.SYSTEM_STORE_CODE=M.SYSTEM_STORE_CODE) OR 
        (K.SYSTEM_STORE_CODE IS NULL AND K.SYSTEM_STORE_NM=M.SYSTEM_STORE_NM))
    WHERE K.INV_DATE>=VAR_INV_DATE_MIN AND K.INV_DATE<=VAR_INV_DATE_MAX AND K.KA_STORE_CODE IS NULL
      AND (M.MRK_STORE_INV IS NULL OR (M.SYSTEM_STORE_CODE IS NULL AND K.SYSTEM_STORE_CODE IS NULL))
    GROUP BY K.KA_SYSTEM_CODE, K.SYSTEM_STORE_CODE, K.SYSTEM_STORE_NM
    ;
    COMMIT;

    INSERT INTO DMMDL.DC0024_INVALID_RPT01_STORE_COM_POS
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.KA_SYSTEM_CODE
         , DWWANT.FN_GET_CM_KA_SYSTEM_NM(K.KA_SYSTEM_CODE) AS KA_SYSTEM_NM
         , K.KA_STORE_CODE
         , (SELECT KA_STORE_NM 
            FROM DWWANT.TRAS_KA_POS_MATL_D 
            WHERE POS_DATE>=VAR_POS_DATE_MIN AND POS_DATE<=VAR_POS_DATE_MAX 
              AND KA_SYSTEM_CODE=K.KA_SYSTEM_CODE AND KA_STORE_CODE=K.KA_STORE_CODE 
            LIMIT 1) AS KA_STORE_NM
         , K.SALES_COM_ID_SA_CN
         , K.SALES_COM_ID_WH_CN
         , K.SALES_COM_ID_DE_CN
    FROM (SELECT KA_SYSTEM_CODE, KA_STORE_CODE
               , COUNT(DISTINCT SALES_COM_ID_SA) AS SALES_COM_ID_SA_CN
               , COUNT(DISTINCT SALES_COM_ID_WH) AS SALES_COM_ID_WH_CN
               , COUNT(DISTINCT SALES_COM_ID_DE) AS SALES_COM_ID_DE_CN
          FROM DWWANT.TRAS_KA_POS_MATL_D
          WHERE POS_DATE>=VAR_POS_DATE_MIN AND POS_DATE<=VAR_POS_DATE_MAX
          GROUP BY KA_SYSTEM_CODE, KA_STORE_CODE) K
    WHERE (K.SALES_COM_ID_SA_CN>1 OR K.SALES_COM_ID_WH_CN>1 OR K.SALES_COM_ID_DE_CN>1)
    ;
    COMMIT;

    INSERT INTO DMMDL.DC0024_INVALID_RPT01_STORE_COM_INV
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.KA_SYSTEM_CODE
         , DWWANT.FN_GET_CM_KA_SYSTEM_NM(K.KA_SYSTEM_CODE) AS KA_SYSTEM_NM
         , K.KA_STORE_CODE
         , (SELECT KA_STORE_NM 
            FROM DWWANT.TRAS_KA_INV_STORE_D 
            WHERE INV_DATE>=VAR_INV_DATE_MIN AND INV_DATE<=VAR_INV_DATE_MAX 
              AND KA_SYSTEM_CODE=K.KA_SYSTEM_CODE AND KA_STORE_CODE=K.KA_STORE_CODE 
            LIMIT 1) AS KA_STORE_NM
         , K.SALES_COM_ID_SA_CN
         , K.SALES_COM_ID_WH_CN
         , K.SALES_COM_ID_DE_CN
    FROM (SELECT KA_SYSTEM_CODE, KA_STORE_CODE
               , COUNT(DISTINCT SALES_COM_ID_SA) AS SALES_COM_ID_SA_CN
               , COUNT(DISTINCT SALES_COM_ID_WH) AS SALES_COM_ID_WH_CN
               , COUNT(DISTINCT SALES_COM_ID_DE) AS SALES_COM_ID_DE_CN
          FROM DWWANT.TRAS_KA_INV_STORE_D
          WHERE INV_DATE>=VAR_INV_DATE_MIN AND INV_DATE<=VAR_INV_DATE_MAX
          GROUP BY KA_SYSTEM_CODE, KA_STORE_CODE) K
    WHERE (K.SALES_COM_ID_SA_CN>1 OR K.SALES_COM_ID_WH_CN>1 OR K.SALES_COM_ID_DE_CN>1)
    ;
    COMMIT;

    INSERT INTO DMMDL.DC0024_INVALID_RPT01_WH_COM_INV
    SELECT VAR_EDI_NO AS EDI_NO, VAR_DATA_DATE AS DATA_DATE
         , K.KA_SYSTEM_CODE
         , DWWANT.FN_GET_CM_KA_SYSTEM_NM(K.KA_SYSTEM_CODE) AS KA_SYSTEM_NM
         , K.KA_WH_CODE
         , (SELECT KA_WH_NM 
            FROM DWWANT.TRAS_KA_INV_WH_D 
            WHERE INV_DATE>=VAR_INV_DATE_MIN AND INV_DATE<=VAR_INV_DATE_MAX 
              AND KA_SYSTEM_CODE=K.KA_SYSTEM_CODE AND KA_WH_CODE=K.KA_WH_CODE
            LIMIT 1) AS KA_WH_NM
         , K.SALES_COM_ID_WH_CN
         , K.SALES_COM_ID_DE_CN
    FROM (SELECT KA_SYSTEM_CODE, KA_WH_CODE
               , COUNT(DISTINCT SALES_COM_ID_WH) AS SALES_COM_ID_WH_CN
               , COUNT(DISTINCT SALES_COM_ID_DE) AS SALES_COM_ID_DE_CN
          FROM DWWANT.TRAS_KA_INV_WH_D
          WHERE INV_DATE>=VAR_INV_DATE_MIN AND INV_DATE<=VAR_INV_DATE_MAX
          GROUP BY KA_SYSTEM_CODE, KA_WH_CODE) K
    WHERE (K.SALES_COM_ID_WH_CN>1 OR K.SALES_COM_ID_DE_CN>1)
    ;
    COMMIT;

    SET VAR_SP_RESULT='Y';
    COMMIT;
END
;